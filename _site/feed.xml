<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog: Daniel Kim</title>
    <description>Exploring Adjacent Possibles</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 07 May 2018 15:26:01 +0000</pubDate>
    <lastBuildDate>Mon, 07 May 2018 15:26:01 +0000</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>Data Mining vs. Data Science</title>
        <description>&lt;section&gt;
  &lt;p&gt;
  일하다보면 다음과 같은 이야기를 가끔 듣습니다.
  &lt;/p&gt;
  &lt;div class=&quot;epigraph&quot;&gt;
    &lt;blockquote&gt;
      &lt;p&gt;
      &quot;데이터 과학, 사실 그거 알고보면 다 데이터 마이닝 시절부터 있던 겁니다. 별로 새로운 것이 없습니다.&quot;
      &lt;/p&gt;
    &lt;/blockquote&gt;  
  &lt;/div&gt;  
  &lt;p&gt;
  이 글에서는 크게 2가지 관점에서 데이터 마이닝과 데이터 과학을 비교하여 무엇이 새로운지 살펴보겠습니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;순전히 개인적인 의견입니다. 아직은 초안입니다. 시간 생기는대로 업데이트하려고 합니다.&lt;/span&gt;
  &lt;/p&gt;  
  &lt;ol&gt;
    &lt;li&gt;1. 데이터&lt;/li&gt;
    &lt;li&gt;2. 업무 수행&lt;/li&gt;
  &lt;/ol&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;1. 데이터: 데이터 종류, 데이터 관련 기반 기술 등 포함&lt;/h2&gt;
  &lt;p&gt;
  데이터 마이닝(90년대 후반 ~ 2007 또는 2008)
    &lt;ul&gt;
      &lt;li&gt;제조업 생산 관련 정보: 설비, 수율 등&lt;/li&gt;      
      &lt;li&gt;금융/카드 회사 고객 정보&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/p&gt;
  &lt;p&gt;
  데이터 과학(2010 ~ 현재)
    &lt;ul&gt;
      &lt;li&gt;위의 데이터 마이닝 포함&lt;/li&gt;
      &lt;li&gt;스마트폰 사용 패턴 데이터: 앱 사용, 각종 통신사 고객 사용 패턴 등&lt;/li&gt;
      &lt;li&gt;게임 데이터: 자체 경제 시스템, 사용자 데이터 등&lt;/li&gt;
      &lt;li&gt;검색 엔진 트렌드 데이터&lt;/li&gt;
      &lt;li&gt;이미지 데이터: 딥러닝 관련&lt;/li&gt;
      &lt;li&gt;음성 데이터: 딥러닝 관련&lt;/li&gt;
      &lt;li&gt;대화형 데이터 시각화 Interactive Data Visualization&lt;/li&gt;
      &lt;li&gt;High Availability Hadoop Ecosystem&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;2. 업무 수행&lt;/h2&gt;
  &lt;p&gt;
  데이터 마이닝(90년대 후반 ~ 2007 또는 2008)
    &lt;ul&gt;
      &lt;li&gt;프로그래밍 언어: 컴파일 + 스크립팅(느림)&lt;/li&gt;
      &lt;li&gt;직접 구현 또는 비싼 상용 프로그램: 문서화 ㅠㅠ 유지 보수 ㅠㅠ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/p&gt;
  &lt;p&gt;
  데이터 과학(2010 ~ 현재)
    &lt;ul&gt;
      &lt;li&gt;훨씬 더 빠른 스크립팅 언어: 예) Intel® Python + Cython&lt;/li&gt;
      &lt;li&gt;오픈소스 대중화, GitHub&lt;/li&gt;
      &lt;li&gt;훨씬 더 가볍고 빠르게 작업: Jupyter notebook&lt;/li&gt;
      &lt;li&gt;자동화된 문서화 도구&lt;/li&gt;
      &lt;li&gt;웹 기반 공동 작업 환경: Google Colab 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;마무리하며&lt;/h2&gt;
  &lt;p&gt;
  현재의 데이터 과학 분야는 이전의 데이터 마이닝 분야를 포함합니다. 하지만 예전과 다를바가 없다고는 말하기 힘듭니다. (업데이트 예정)
  &lt;/p&gt;
  &lt;p&gt;
  이 글의 맨 앞에서 소개한 이야기로 돌아가봅시다. 개인적으로는 어느정도 일리가 있는 이야기라고 생각합니다. 즉, 예전부터 있었던 해오던 데이터 마이닝 업무의 연장선상에서 언어만 Python 이나 R 로 바꾸고 데이터 과학 업무한다고 주장하는 것을 가리켜 반발하는 것 같습니다. 업무 수행 전반을 아우르는 패러다임까지 변해야 현대적인 데이터 과학자라고 할 수 있겠습니다. (업데이트 예정)
  &lt;/p&gt;
  &lt;p&gt;
  데이터 마이닝 업무에서 데이터 종류, 분석 기법, 추가된 변수 등이 없는데도 데이터 과학 시대라고 떠들면서 무분별하게 편승하는 행태도 잘 구별할 필요가 있겠습니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 200
});
&lt;/script&gt;
</description>
        <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2018/05/07/Data-mining-vs-data-science/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2018/05/07/Data-mining-vs-data-science/</guid>
        
        
      </item>
    
      <item>
        <title>Ubuntu 16.04 Desktop에서 NVIDIA 최신 driver 쉽게 설치하기</title>
        <description>&lt;section&gt;
  &lt;p&gt;
  Ubuntu 16.04 Desktop 버전에서 NVIDIA 최신 드라이버를 나름 쉽게 설치하는 방법입니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;p&gt;
  1. 터미널에서 다음과 같이 입력합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;출처: &lt;a href=&quot;https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa&quot;&gt;Proprietary GPU Drivers&lt;/a&gt;&lt;/span&gt;
    &lt;pre class=&quot;code&quot;&gt;
$ sudo add-apt-repository ppa:graphics-drivers/ppa
$ sudo apt-get update
    &lt;/pre&gt;
  &lt;/p&gt;
  &lt;p&gt;
  2. &quot;Additional Drivers&quot;를 실행합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;출처: &lt;a href=&quot;https://www.youtube.com/watch?v=PeWTSprpq1M&quot;&gt;Install Nvidia Driver on Ubuntu 16.04 (GUI Method for Beginners)&lt;/a&gt;&lt;/span&gt; 2번 항목부터는 출처에 있는 내용과 거의 같습니다. 최신 버전이 나오는 것만 다릅니다.
  &lt;/p&gt;
  &lt;p&gt;
  3. &quot;Using NVIDIA binary driver - version xxx.xx from nvidia-xxx&quot; 을 선택합니다. 이 과정은 몇 분 걸립니다. 여기에서 xxx.xx 나 xxx 는 버전을 가리키는 숫자입니다. 참고로 저는 CUDA 9.1을 설치하기 위해&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;출처: &lt;a href=&quot;https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;target_distro=Ubuntu&amp;target_version=1604&amp;target_type=debnetwork&quot;&gt;CUDA Toolkit 9.1 Download&lt;/a&gt;&lt;/span&gt; 390.xx 버전을 설치했습니다.
  &lt;/p&gt;
  &lt;p&gt;
  4. 드라이버 설치가 끝나면 재부팅합니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 200
});
&lt;/script&gt;
</description>
        <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2018/02/19/Install-NVIDIA-driver-on-Ubuntu1604/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2018/02/19/Install-NVIDIA-driver-on-Ubuntu1604/</guid>
        
        
      </item>
    
      <item>
        <title>산업계 데이터 과학 업무에서 조심해야 할 10가지 오류</title>
        <description>&lt;section&gt;
  &lt;p&gt;
  &lt;figure&gt;
    &lt;img src=&quot;https://cdn-images-1.medium.com/max/1000/1*SHEtxnBMgbmjdcAWbefqpg.jpeg&quot;/&gt;    
  &lt;/figure&gt;
  &lt;/p&gt;
  &lt;div class=&quot;epigraph&quot;&gt;
    &lt;blockquote&gt;
      &lt;p&gt;
      &quot;현재 머신러닝과 데이터 과학을 둘러싼 과장 광고가 많은 것이 사실이다. (중략) 학계에서 최첨단 기술로 무언가를 할 줄 아는 것과 실제 이뤄낸 것 사이에는 엄청난 격차가 있다.&quot;&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;출처: &lt;br/&gt;&lt;a href=&quot;http://www.ciokorea.com/news/36034&quot;&gt;머신러닝·오픈소스로 확 바뀐 블룸버그, 어떻게? (CIO Korea)&lt;/a&gt;&lt;/span&gt;
      &lt;/p&gt;
      &lt;footer&gt;기드온 만(블룸버그 데이터 과학 총괄)&lt;/footer&gt;
    &lt;/blockquote&gt;  
  &lt;/div&gt;
  &lt;p&gt;
  이 글은 Shane Brennan 님이 2017년 9월 18일 &lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt;에 작성하신 글을 &lt;a href=&quot;http://danielykim.me/&quot;&gt;제가&lt;/a&gt; 한글로 옮긴 것입니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;출처: &lt;a href=&quot;https://medium.com/towards-data-science/the-ten-fallacies-of-data-science-9b2af78a1862e&quot;&gt;The Ten Fallacies of Data Science&lt;/a&gt;&lt;/span&gt; 이 글에서는 주로 공부를 마치고 취직한지 얼마되지 않은 신입 데이터 과학자가 산업계에서 데이터 과학 업무를 맡으며 겪게 되는 상황들을 작업 순서에 따라 다룹니다. 그리고 이제 막 산업계로 옮긴 이들이 일을 하는 과정에서 놓치기 쉬운 부분과 흔히 저지르기 실수들도 소개합니다. 
  &lt;/p&gt;
  &lt;p&gt;
  이 글에서 다루는 상황들이 어쩌면 학계에 비해 국내외 기업들을 우회적으로 비하하는 것으로 비춰질 수도 있겠으나, 데이터 기반, 분석 기반, 더 나아가 AI 기반 사업이나 프로젝트를 추진하는 회사라면, 이 글에서 언급하는 사례가 회사 사업이나 프로젝트에 있지는 않은지 점검해보는 것도 괜찮을 것 같습니다.
  &lt;/p&gt;
  &lt;p&gt;
  원문 제목에는 산업계라는 단어가 없지만, 해당 단어는 본문 내용과 관련이 깊기에 한글로 옮기며 추가했습니다. 초벌 번역 수준이라 어색하거나 잘못 옮긴 부분이 있을 수 있습니다. 이러한 오류나 좀 더 자연스러운 표현 등의 제안은 댓글로 남겨주시면 확인하는대로 수정하도록 하겠습니다. 혹시 저작권 관련하여 문제가 생기면 바로 삭제하겠습니다. 모든 측주(sidenote)는 옮긴이가 남긴 것입니다. 참고하시길 바랍니다. 아래부터 옮긴 글의 내용입니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;p&gt;
  데이터 과학을 배우는 학생들과 최근에 입사한 사람들이 바라보는 이상향과 그들이 산업계에서 실제 데이터 과학 문제를 마주하며 종종 겪는 어려움들 사이에는 겉으로 드러나지 않는 차이가 있습니다. 대학에서 열리는 이러한 데이터 분석 기법 관련 강좌들의 목적은 학생들에게 코딩, 통계, 데이터 재구성 등을 가르치는 것입니다. 하지만, 산업계에서 실제로 데이터 과학 업무를 수행하며 여러분이 이겨내야 할 어려움들을 이러한 과목에서는 접하기 매우 어렵습니다.
  &lt;/p&gt;
  &lt;p&gt;
  분석 기법 강좌에서는 (종종 사용할 도구와) 데이터를 제공하고 여러분에게 잘 알려진 결과를 내라고 합니다만, 산업계에서는 데이터가 없을 수도 있고, 작업하기에 적합하다고 정해주는 도구들이 딱히 없을 수도 있으며, 심지어 예상되는 결과가 뭔지 전혀 모를 수도 있습니다. 게다가 산업계에서는 종종 훨씬 더 엄격한 마감일&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이 부분은 학계의 데이터 과학 활동과 다른 점입니다. 그리고 무료 Pilot이나 무료 개념 증명(Proof of concept; PoC) 프로젝트가 아닌, 투자된 비용이 있는 프로젝트나 사업에서는 정말 중요한 점입니다. 잘못되는 경우에는 법적인 책임을 져야하기도 합니다. 심지어 이는 금전적인 피해 보상으로까지 번질 수도 있습니다.&lt;/span&gt;이 있고, 옆에서 여러분의 분석 작업을 안내해주지 않으며, 분석을 요청한 사람이 통계학을 잘 모르기도 합니다.
  &lt;/p&gt;
  &lt;p&gt;
  몇몇 쓸모 있는 분석 작업을 위해 필요한 기술들을 고른다는 맥락에서 보면, 대학 강좌들에서 여러 진입 장벽들을 의도적으로 낮춰 여러분이 데이터 과학의 핵심적인 내용에 집중할 수 있도록 하는 것이 당연합니다. 통계 분포들, 가설 검증, 분류기들, R, SPSS, Python, RapidMiner 같은 다양한 도구들을 소개하는 강의 자료를 통해 조금씩 배워나갑니다. 기본적인 내용을 이해한 다음에는, 깔끔하고 좋은 데이터를 얻게 되고, 몇 가지 random forest 기법과 다른 종류의 분류기들을 비교하는 요청을 받습니다.
  &lt;/p&gt;
  &lt;p&gt;
  여기에서 오해하지 마시길 바랍니다. 이러한 방식으로 배우는 것은 여러분이 경력을 쌓으면서 나중에 하게 될 수도 있는 일에서도 중요합니다만, 이런 것들은 책으로 공부해서 할 수 있는 것과 별반 다르지 않습니다. 위와 같은 이상적인 프로젝트는 고통스럽고 끝이 보이지 않는 기나긴 시간을 지나야 실제 업무 사례들로 남게 됩니다. 그리고 초보 데이터 과학자들은 그들에게 새로운 역할이 주어질 때 이런 험난한 과정 중에서 상당히 당황스러운 상황에&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;또는 얕은 생각이라고 할 수도 있겠습니다.&lt;/span&gt; 닥치기도 합니다. 여기에는 종종 눈물과 이를 갈게되는 모습이 동반되기도 합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;글쓴이가 참 순화해서 표현했습니다. 실제는 그 이상이기도 합니다.&lt;/span&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;1. 데이터가 존재한다.&lt;/h2&gt;
  &lt;p&gt;
  &lt;figure&gt;
    &lt;img src=&quot;https://cdn-images-1.medium.com/max/1000/1*ZHukqK7hBn5aGrVF_Xi-bA.jpeg&quot;/&gt;    
  &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
  급하게 분석 업무를 요청하는 내용에는 이 업무에 대한 근간을 이루는 데이터를 사용할 수 있다는 가정이 언제나 들어있습니다. 이것은 가장 기본적인 가정 같이 보입니다만, 어떤 데이터를 데이터 분석해달라는 요청을 하기에 너무 적어서가 아니라, 데이터가 아예 없거나&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;황당할 수도 있으나 이런 상황이 적지 않습니다.&lt;/span&gt;, 데이터를 사용할 수 없거나, 공통 식별자가 없거나 너무 과도하게 합산(aggregate)하거나 요약했다는 것을 고객에게 깨닫게하는 일이 될 수도 있습니다. 
  &lt;/p&gt;  
  &lt;p&gt;
  모든 작업을 시작할 때 필요한 가장 첫 번째 질문은 &quot;기초가 되는 중요한 데이터가 존재하느냐&quot; 입니다. 문제에 몰입하여 파고들기 전에 또는 분석을 특정한 기한까지 끝내기로 합의하기 전에 이 질문을 묻는 것이 필요합니다. 최악의 경우에 여러분은 데이터 없이 완전히 고립되어, 여러분에게 목표를 달성할 수 없는 분석을 하라는 압박&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이러한 압박은 어쩌면 당연한 말일 수도 있겠지만, 프로젝트와 사업의 규모가 클 수록 더 큰 경향이 있습니다.&lt;/span&gt;과, 결과에 대한 기대만 받을 수 있습니다. 이런 상황에서 곳곳에 구멍이 숭숭 뚫린 스위스 치즈처럼 빈 곳이 많은 데이터로 분석한 결과를 보고하고 싶은 유혹에 흔들릴 수 있습니다. 이러한 데이터에서는 잘못된 결론이 불가피하게 나올 수 있고, 이로 인해 공적 사회의 극심한 지탄을 받게될 것입니다. 
  &lt;/p&gt;
  &lt;p&gt;
  데이터가 아예 없다면, 빨리 그리고 자주 알려야 합니다. 소리지르듯이 말입니다. 작업할 때 몇몇 불완전한 데이터가 있다면, 이 경우에도 마찬가지로 똑같이 그래야 합니다만, 데이터 공학자 요정들이 여러분을 위한 완벽한 데이터를마법처럼 수집해주기 전까지는, 이 불완전한 데이터를 사용하지 맙시다. 대신 일하지 않고 놀 수 있는 아주 좋은 핑계거리가 하나 생기게 됩니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;2. 접근할 수 있는 데이터이다.&lt;/h2&gt;
  &lt;p&gt;
좋습니다. 여러분에게 실제로 필요한 데이터가 어딘가 존재하고 아주 완벽하다는 소문을 확인했습니다. 이제, 다음 장애물은 이 데이터를 그럴듯한 시간 안에 사용할 수 있도록 만들 수 있느냐 입니다. 회사 안의 서로 다른 부서들 사이의 정치적인 역학관계, 외부 업체 컨설턴트들이 적재해둔 데이터, 장기 휴가를 떠난 직원들, 데이터 접근 권한을 팔아 돈을 손쉽게 벌려는 제3자 회사들, 그 외의 다른 여러 이유들도 이 장애물 주위를 둘러싸고 있습니다. 
  &lt;/p&gt;
  &lt;p&gt;
저장해둔 정보를 무료로 쉽게 접근할 수 있는 권한을 주는 것은 데이터를 보유하고 있는 측에서 법적 제한, 계약 관계상, 또는 경제적 제한 조건 때문에 저장해둔 정보를 무료로 쉽게 접근할 수 있는 권한을 주지 않을 수도 있고, 그저 단지 보유하고 있는 측에서 자신들의 현재 역할을 유지하고 싶어서 해당 권한을 주지 않을 수도 있습니다.
  &lt;/p&gt;
  &lt;p&gt;
매우 합리적으로 데이터를 요청한 것 같이 보여도 심지어 개인 회사들에게까지 이 요청 때문에 인정사정없이 문전박대 당할 수도 있습니다. 돈이 되는 지점에서, 특별히 여러분의 데이터 전달 경로 중 어떠한 지점에 여러 외부 개입이 있다면, 재정적으로 큰 규모의 프로젝트가 될 수도 있는 한 줄짜리 어떤 SQL 질의를 찾을 수도 있습니다.
  &lt;/p&gt;
  &lt;p&gt;
  따라서 어떤 뛰어난 기술을 가진 데이터 과학자의 목표는, 데이터의 각 부분의 소유권을 갖고 어떠한 데이터 요청이 들어와도 적어도 어느 정도는 유연하게 대처할 수 있도록, 보유한 데이터 전달 경로 각각 그리고 모든 단계의 공동 관리자가 되는 것입니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이 부분은 원활한 업무 진행을 위해 정말 중요합니다.&lt;/span&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;3. 일관성이 있는 데이터이다.&lt;/h2&gt;
  &lt;p&gt;
  대단히 합리적인 이유에서, 잘 짜여져 있고 자기 일관성이 있으며 잘 정의된 형식의 일관성 있는 데이터를 찾는 것은 매우 좋습니다. 하지만 데이터 파일에서 열의 수가 갑자기 19개에서 20개가 되었다가 다시 19개가 되거나, 같은 데이터의 서로 다른 버전 사이에 열 순서가 변경되기도 합니다. 별로 반갑지 않은 깜짝 소식들이 늘 그렇듯이, 이런 종류의 문제가 종종 마지막 순간(R Studio에서 데이터를 살펴보려고 read.csv() 함수를 실행할 때)에 나타날 수 있습니다. 
  &lt;/p&gt;
  &lt;p&gt;
데이터에 일관성이 있는 것처럼 보이더라도, 이상한 UTF-8 문자들이나 한 파일 안에서 날짜 형식이 YYYYMMDD에서 MM-DD-YY로 변하는 것이나 이런 말도 안 되는 몇몇 부분을 볼 때, 머리를 쥐어 뜯으며 욕설을 남발할 수 있습니다. 특별히, 구형 시스템에 의존하는 데이터 전달 경로에서 데이터 과학자나 데이터 공학자가 데이터를 축적하는 작업을 디자인하지 않았다면, 서로 다른 작동 조건에 대해 누구나 별의별 방식으로 불쾌함을 나타낼 수 있습니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;4. 분석 업무와 관련이 있는 데이터이다.&lt;/h2&gt;
  &lt;p&gt;
  모든 일이 잘 진행되고 있다가, 오래 기다렸던 데이터 모음이 분석에 필요한 최신 정보가 아니거나 분석에 필요한 수준에 미치지 못할 수 있다는 것을 발견할 수도 있습니다. 웹에서의 사용자 행동을 다루는 데이터 원천으로 거의 틀림없이 가장 널리 사용되고 있는 Google Analytics (GA)에는 몇 가지 귀찮은 문제들이 있습니다. 이는 GA로 상세한 분석을 하지 못하게 했기 때문에 생기는 문제입니다.
  &lt;/p&gt;
  &lt;p&gt;첫째, 웹 사용자를 구별하기 힘든 점이 있습니다. 둘째, GA는 실제 통계 값 대신에 전체 방문자 수의 추정 값들을 나타내는데서 생기는 불안함이 있습니다. 따라서, 그럴듯하게 들리는 요청은 별로 상관없는 데이터 때문에 실현 불가능한 것이 됩니다. 예를 들어, 여러분이 웹사이트 X에 로그인한 고객들에 대해 고객 유지율을 예측해달라는 요청을 받았다면, GA 데이터는 자체적으로 사이트에서 보유하고 있는 것과 별반 다를 것 없이 마찬가지로 쓸모 없을 것입니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;5. 직관적으로 이해할 수 있는 데이터이다.&lt;/h2&gt;
  &lt;p&gt;
  데이터를 받기 위해 너무 많이 기다렸는데, 받고나서 그 다음 살펴보니, 결국에 고대 앗시리아 점토판을 해독하는 것 같을 수도 있습니다. 업계 종사자만 아는 코드들(domain-specific codes), 잘라내버린 텍스트 필드들(truncated text fields), 참조표가 없거나, 머리글(header; 열 이름 정보)이 없거나, 이상하게 이름이 지어진 경우 등이 데이터를 이해하기 어렵게 만드는 원인이 됩니다. &lt;i&gt;&quot;쓸데없는 것이 입력되면, 출력되는 것도 쓸데없는 것만 나온다&quot;&lt;/i&gt;는 원칙을 엄격하게 따르는 것은 결과를 낼 때 해독 불가능한 데이터를 무시하는 경향이 있었다면 최선이고, HEADER_1 같은 필드의 의미를 찾아나서야 하는 부가적인 문제들이 생기는 상황은 최악이라는 의미입니다. 어떤 분석 과정에서 데이터를 설명하는 잘 정리된 문서가 없다면, 도대체 무엇을 측정하는지 알 수 없을 것입니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;6. 데이터를 처리할 수 있다.&lt;/h2&gt;
  &lt;p&gt;
  완벽합니다. 이제 600MB 가량의 CSV 파일을 손에 넣었습니다. 사업장 규정에 따라 제공된 구식 노트북을 가지고 Excel의 VLOOKUP 함수를 이용해서 이 파일을 또다른 600MB CSV 파일과 함께 다뤄야 합니다. 종종 데이터 과학 도구들을 IT 분야의 다른 소프트웨어와 별반 다를 것 없는 것으로 취급하는 모습은 신입 (특히 더욱 잘 갖춰진 대규모 회사에서 이직한) 데이터 과학자들을 놀라게 할지도 모릅니다. 오픈 소스 도구들을 못마땅해하거나&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;라이선스 문제나 유지 보수의 책임 소재 때문에 오픈소스에 별로 호의적이지 않을 수도 있습니다.&lt;/span&gt;, 설치 권한을 받을 수 없거나, 모든 도구는 겉으로만 그럴싸하고 아무도 본 적이 없는 마법같은 IT 보안 인증을 받아야만 하기도 합니다.
  &lt;/p&gt;
  &lt;p&gt;
  저는 잘 정립된 어떤 소프트웨어 패키지의 세부 보안 인증을 제출하라는 요청을 받은 적이 있습니다. 저는 산업계 IT 상사들이 완벽하게 작동하며 시장을 선도하고 있는 소프트웨어를 거절하는 것을 목격하기도 했습니다. 거절한 이유는 판매 업체가 &quot;너무 싸다&quot; 또는 &quot;XYZ의 공급자로 지정된 업체가 아니다&quot;였습니다. 큰 데이터를 처리하는 것과 관련된 단순한 기술적인 문제들을 넘어, IT 규정이나 규제를 이용하여, 사람들이 작업을 쉽게 처리하기 위한 충분한 처리 도구들을 손에 넣지 못하도록 막는 음모가 있을 수 있습니다. 두 데이터 모음을 결합하는 방식으로 Excel의 VLookup 함수들만 이용하라고 강요받은 사람의 이야기를 들은 적이 있습니다. 글쎄요, 아무도 더 좋은 방식으로 이 작업을 할 수 없을 것이라는 것이 강요의 이유였다고 합니다. 이런 종류의 단기 IT 규제 때문에 코딩과 병렬화해서 자동으로 몇 분만에 할 수 있는 파일 하나 처리하는 작업이 몇 시간 걸릴 수 있습니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;7. 분석 작업들을 쉽게 다시 진행할 수 있다.&lt;/h2&gt;
  &lt;p&gt;
  &lt;figure&gt;
    &lt;img src=&quot;https://cdn-images-1.medium.com/max/1000/1*fwQhy0s2nOODuJlzu9jgNg.jpeg&quot;/&gt;    
  &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
  여러분은 세 달 전에 했던 분석을 기억하십니까? 분석을 의뢰한 고객이 다음과 같이 말하기도 합니다. &quot;여기 업데이트된 마케팅 제휴 데이터가 있습니다. 빠른 시일 내에 분석 코드를 다시 돌려주시겠습니까?&quot; 여러분은 어쩌면 다음과 같이 말할지도 모릅니다. &quot;감사합니다!!! 좋습니다... 어디에서 시작해야할까요!!!&quot; 이런 상황은 직소 퍼즐을 다 맞추고 난 다음 바로 헝클어서 박스에 넣었는데, 여러분에게 퍼즐을 다시 주고 엄청나게 빠른 시간 안에 퍼즐을 다시 맞추라고 하는 것과 비슷합니다. 또는 과거 어느 시점에는 살만했지만 이제는 폐가가 되어버린 곳에서 생활하라는 요청을 받은 상황과 비슷합니다. 
  &lt;/p&gt;
  &lt;p&gt;
  다시 실행할 수 있게 분석 코드를 분명하게 구성하지 않았고 데이터를 현재 것만 사용하도록 작업했다면, 업데이트된 분석 결과를 얻기 위해 모든 것을 업데이트하고 모든 것을 다시 불러와야하는 작업 때문에 새로 얻은 업무 기회들이 고통으로 바뀔 것입니다. 이건 여러분이 사용한 데이터가 바뀔지 고려하지 않은 것이 아닙니다. 데이터베이스 스키마 변경을 고려했어야만 한 것도 아닙니다. 입력값 목록이 바뀌어서 그런 것도 아닙니다. 분석 업무에서 중요한 부분처럼 보이는 작업을 요청 받았다면, 이상적으로는 버튼 하나만 클릭하거나 또는 별로 노력하지 않아도 쉽게 작업을 다시 실행할 수 있도록 작업을 디자인하시길 바랍니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이것은 아주 아주 중요한 부분입니다!!!&lt;/span&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;8. 암호화는 어느 곳에서도 필요 없다.&lt;/h2&gt;
  &lt;p&gt;
  아, 그렇습니다, 고전적인 것들 말입니다. 여러분은 분석을 마쳤고, 문제에 대해 몇 장의 슬라이드와 훌륭한 보고서로 정리했으며, 이제 검토를 위해 누군가에게 데이터를 보내야하는 상황입니다. 모든 세부 고객 정보를 단순 텍스트로 메일에 붙여넣기할 예정인데, 이런 상황에서는 무엇이 잘못되겠습니까? 뭐, 한 가지 예를 들면, 자동 완성 때문에 연락처에 있는 사람 중에서 보내면 안 되는 사람에게 메일을 보내는 것은 그리 어렵지 않습니다. 여러분의 보물을 아무도 모르는 곳에 잘 보관하시길 바랍니다. 또는, 한 회사에 대한 상세한 재무 분석을 &lt;i&gt;실수로&lt;/i&gt; 경쟁사에 보낸 제 이전 동료 같은 실수를 할 수도 있습니다!&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;산업계에서는 가벼워 보이는 한 순간의 실수 때문에 법적인 책임을 져야할 수도 있습니다. 절대 가볍게 넘기지 마시길 바랍니다.&lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
  정보 보안에 있는 좋은 사람들이 여러분이 보낼 때 모든 데이터를 암호화하라고 요청하는 이유가 있습니다. 주로 보여주기식 보안조치가 최우선이고, 실수해도 봐주는 것이 아마도 그 다음일 것 같지만, 겉으로 보여지는 보안 외에도 충분히 많은 그럴듯한 이유들이 있습니다.
  &lt;/p&gt;
  &lt;p&gt;
  여러분이 &lt;b&gt;어떤 것&lt;/b&gt;을 &lt;b&gt;어떤 이&lt;/b&gt;에게 보내기 전에 첫 번째로 할 일은 적절한 수준의 암호화에 동의하는 것과 원본 데이터와 분석 결과 둘 다를 평가하는 것입니다. 이상적으로는 안전한 시스템에서만 일하여, 택시에 뭔가 두고 내리는 일과 같은 상황이 생기지 않도록 또는 꼬치꼬치 캐묻는 사람에게 평가 받지 않도록 미리 대비합시다. 필요하다면 암호화가 표준이 되도록 투쟁해야합니다... 타협하지 마시길 바랍니다. 그러면 여러분 자신의 개인 보안 표준은 기술적으로 전문적일 것이고 IT 정책들보다 더 안전하게 될 것입니다. 그러니 꼭 명심하시길 바랍니다!
  &lt;/p&gt;
  &lt;p&gt;
  (보안 정책들을 위반할 수도 있어서) 어떤 GPG 클라이언트 설치하는 작업을 허락 받지 못했다면, 암호로 보호된 Excel 파일이나 암호화된 zip 같은 암호화된 형식으로 반드시 암호화를 해야만 합니다. 뭐라고요? 이메일 서버에서 암호화된 zip 파일이 차단됐고, 클라이언트에 SFTP나 파일 공유 서버가 없다고요? &lt;b&gt;설마요.&lt;/b&gt; 시간을 아끼려고 '그냥 이번 한 번만'이라고 하면서 여러분의 데이터 보안 표준 사항들을 포기하는 일이 절대로 없도록 합시다. 그렇지 않으면 결국에는, 여러분은 자리를 뜨게 될 것이고, 여러분이 새로운 직장을 찾고 있는 동안에, 분석 때문에 여러분에게 소리지르던 사람들이 그들의 방식대로 일을 진행하게 될 것입니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;9. 분석 결과물을 쉽게 공유하고 이해할 수 있다.&lt;/h2&gt;
  &lt;p&gt;
  현실을 바라봅시다 -- 여러분의 발표를 듣는 사람들의 대부분은 구체적인 분석 내용을 이해하지 못할 것입니다. 무지한 티를 내면 약해보일 수 있기 때문에, 듣는 사람들은 얼버무리거나 이해하는 것처럼 행동할 것입니다. 더 많은 특징들을 가지고 여러분의 분석을 향상시키라고 요청할 것이고, 분석 결과는 사용되기 전에 수학적으로 증명돼야 한다고 주장할 것이며, 여러분의 발표를 듣고 나서 당혹스러움을 감추기 위해 온갖 종류의 속임수를 사용할 것이고, 갖가지 것들로 산만하게 방해할 것입니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이런 상황은 주로 분석 업무를 프로젝트 형태로 외주 회사에 할당하는 경우에 발생할 수 있습니다. 좀 더 구체적으로는, 발주한 회사가 사회적으로나 여러모로 지위가 높은데 분석에 있어서는 외주 회사가 뛰어난 경우에 이런 상황이 생길 수 있습니다.&lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
어떤 이들은 단순히 특정한 &lt;i&gt;p&lt;/i&gt;-값을 찾고, 다른 어떤 이들은 직감에 의존하겠지만, 여러분은 여러분의 상세 분석 결과가 의심 받는 것이나, 질문을 받거나, 무시 당하는 것을 목격하게 될 것입니다. 또는 다르게 말하면... 어떤 종류의 충분히 높은 수준의 분석은 마법과 다를 바 없는 것처럼 여겨질 것입니다. 그러므로 제기된 문제를 여러분이 해결했는지 여부에 상관 없이, 결과를 접하는 사람들이 쉽게 이해할 수 있도록 되도록이면 수식을 줄이고 말로 표현하는 것이 여러분의 주된 업무입니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;업무 보고를 비슷한 주제를 공부하고 있는 사람들이 모인 학회로 생각해서 모두가 알고 있다는 착각을 하지않도록 주의합시다.&lt;/span&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;10. 처음부터 여러분이 찾고 있는 답이 있다.&lt;/h2&gt;
  &lt;p&gt;
  마치 보물찾기 놀이처럼, 몇 가지 적은 수의 도구로 약간의 조사할 시간이 주어진 상황에서 어떤 데이터 과학 프로젝트의 원하는 목표에 실제로 도달할 수 있다고 생각하기도 합니다. 보물찾기는 찾으면 보물인지 쉽게 알 수 있습니다만, 데이터 과학 프로젝트는 보물찾기와는 다르게 뭔가 찾아도 그게 보물인지 아닌지 알 수 없을 수도 있습니다. 즉, 실제 프로젝트에서는 어느 누구도 어떤 것을 증명하는데 도움이 될 적당한 통찰력이나 힌트를 데이터에 의도적으로 입히지 않습니다. 이번 달 웹사이트의 클릭율이 왜 떨어졌는지 알아내고 싶습니까? 제품 Y보다 제품 X를 선호하는 고객들을 찾아내고 싶습니까? 이런 질문들에는 예상되는 결과가 이미 있습니다. 이런 식의 뻔한 질문과 답변은 종종 제대로 된 과학적 탐구 방식을 해칩니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;산업계에서 이름만 데이터 과학자가 아니라, 정말로 데이터 과학자라면, 과학적 탐구 방식에 합당한 질문을 할 수 있어야 하겠습니다. 그리고 던진 질문으로 풀 수 있는 문제를 만들어서 정해진 시간 내에 마침표를 찍을 수 있어야 하겠습니다.&lt;/span&gt;
  &lt;/p&gt;
&lt;/section&gt;


&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 200
});
&lt;/script&gt;
</description>
        <pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/10/27/The-ten-fallacies-of-data-science/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/10/27/The-ten-fallacies-of-data-science/</guid>
        
        
      </item>
    
      <item>
        <title>데이터 과학은 정말로 과학인가?</title>
        <description>&lt;section&gt;
  &lt;div class=&quot;epigraph&quot;&gt;
    &lt;blockquote&gt;
      &lt;p&gt;
과학은 단순히 지식의 집합이 아닙니다. 생각하는 방법입니다.
      &lt;/p&gt;
      &lt;footer&gt;칼 세이건&lt;/footer&gt;
    &lt;/blockquote&gt;  
  &lt;/div&gt;
  &lt;p&gt;
  제목의 질문을 다음과 같이 바꿀 수도 있겠습니다. &quot;데이터 과학자&quot;&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Jeff_Hammerbacher&quot;&gt;Jeff Hammerbacher&lt;/a&gt;와 &lt;a href=&quot;https://en.wikipedia.org/wiki/DJ_Patil&quot;&gt;DJ Patil&lt;/a&gt;이 새로운 직업을 설명할 때 처음으로 사용한 단어라고 합니다.&lt;/span&gt;는 정말로 &quot;과학자&quot;인가? 이외에도 관련된 여러 파생 질문이 가능하겠습니다만, &quot;데이터&quot;, &quot;과학&quot;, &quot;과학자&quot; 이렇게 세 가지 단어의 정의를 각각 살펴보고 종합하여 현실과 일관적인지 따져보면, 그리 만족스럽진 않더라도 첫 시작으로는 꽤 괜찮은 답을 할 수 있겠습니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;p&gt;
  제가 직접 질문에 답하기 보다는, 앞서 고민한 사람들의 이야기를 먼저 살펴보는 것이 좋겠습니다. 아래는 미국 시카고 대학교의 Rayid Ghani 님이 2013년 7월 13일 블로그에 작성하신 글&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;출처: &lt;a href=&quot;http://www.rayidghani.com/is-data-science-a-real-science&quot;&gt;Is Data Science a Real Science?&lt;/a&gt;&lt;/span&gt; 중에서 일부를 제가 한글로 옮긴 것입니다.
  &lt;/p&gt;
  &lt;div class=&quot;epigraph&quot;&gt;
    &lt;blockquote&gt;
      &lt;p&gt;
      저를 포함하여 많은 사람들은 종종 &quot;과학&quot;이라는 단어가 들어가면 아마도 진짜 과학이 아닐 것이라고 말합니다. 컴퓨터 과학, 정치 과학, 사회 과학, 로켓 과학...&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;엄밀하게 이야기하면&lt;br/&gt; 이러한 것들은 공학이거나 인문학입니다.&lt;br/&gt; 과학과 공학은 다릅니다. &lt;br/&gt;과학이 자연의 원리를 이해하는 학문이라면,&lt;br/&gt; 공학은 과학에서 얻은 원리를&lt;br/&gt; 인류를 위해 응용하는 학문입니다.&lt;/span&gt;
거기에 어떤 진실이 있다고 해도, 완전하게 신뢰하진 않습니다. 그렇다면 데이터 과학은 어떻겠습니까?
      &lt;/p&gt;
      &lt;p&gt;
뭐, 현재의 데이터 과학이라는 단어와 (분야와 관련하여) 비슷한 신조어들이 많습니다(이 단어가 어떤 의미가 있는지는 잠시 무시하고, 이 단어를 잠시 데이터 마이닝, 기계 학습, 애널리틱스 등의 다른 데이터 관련 신조어의 유의어로 부릅시다.) 기업들은 뭔가를 합리적인 방식으로 하는 것에 어떠한 가치가 있다는 것을 깨닫고 있습니다. 데이터를 모으는데 더 많은 자원을 투자하고 있습니다. 심지어 데이터를 무엇을 할 수 있는지 묻고 있습니다. 사실 데이터 주도(data driven) 분석에 기반하여 판단을 내리는 방식으로 변하는 것은 정말 혁신적인 모습입니다.
      &lt;/p&gt;
      &lt;p&gt;
그렇다고 해서 이러한 모습이 데이터 과학을 과학으로 만들어주겠습니까? 사실 그렇지 않습니다. 데이터를 가지고 의사결정을 향상시키는 것은 좋고 쓸모 있는 일입니다만 그렇다고해서 과학은 아닙니다. 동시에, 저 같은 사람이 하는 일에는 분명히 수많은 과학이 깔려 있습니다. 과학에 근거하여 모델을 세웁니다. 통계적이고 과학적인 타당성을 가지는 실험들을 합니다. 일반화하는, 예견하는, (필요한 경우에) 어떤 때는 설명력과 인과력을 가진 예측값들을 냅니다. 이것이 과학입니다. 
      &lt;/p&gt;
      &lt;p&gt;
어떤 사람들은 제 의견에 동의하지 않고, 훌륭하고 오래된 &quot;생성 가설&quot;, &quot;실험 실행&quot;, &quot;과학에 대한 이론적 접근&quot; 등의 방식을 고수할 수 있겠지만 저는 그것이 유일한 과학적 방식이라고 생각하지 않습니다. 수많은 진짜 과학은 가설과 관련이 있지만, 그 중 많은 부분은 답을 찾는 것과 그 답을 제공 할 수 있는 시스템을 만들 필요에서 유래합니다. 
      &lt;/p&gt;
      &lt;p&gt; 
저는 분명히 좋은 데이터 과학자는 데이터 해커와 다르다고 생각합니다. 데이터 해킹은 확실히 쓸모가 있습니다만 (그리고 가치가 있기도 합니다만) 적절한 주의 사항, 제한 사항, 고지 사항 등을 수반하지 않을 경우 위험합니다.
      &lt;/p&gt;
      &lt;p&gt;
(중략)
      &lt;/p&gt;
      &lt;p&gt;
      두 가지 이야기를 말씀드리려고 합니다. 첫 번째는 다음과 같습니다. 큰 회사가 허리케인이 생기기 몇 달 전에 허리케인을 예측하는 것을 부탁했습니다. 그 회사는 데이터에 관한 과장 광고를 들었고, 허리케인에 관한 지난 100년간의 데이터가 있었기 때문에, 데이터를 많이 보유할 수록 무엇이든 예측할 수 있다고 생각했습니다(아니면 일부 전문가의 말을 단순하게 인용했을 수도 있습니다). 이렇게 데이터를 모으는 작업이 1년 뒤 일어날 일을 예측할 수 있도록 만들지 않습니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;산업계에서는 과학자만 모여있지는 않기 때문에 이런 상황이 쉽게 일어날 수 있습니다. 일어나도 비웃거나 무시하지 않도록 주의합시다. 누구나 모르면 실수할 수 있습니다.&lt;/span&gt;
      &lt;/p&gt;
      &lt;p&gt;
(중략)
      &lt;/p&gt;
      &lt;p&gt;
답변을 할 수 있다는 것은 중요합니다만, 여러분이 얻은 답이 적합한지 판단하는 능력도 똑같이 중요합니다. 여러분의 분석 방식을 언제 적용할지 적용하지 말아야 하겠습니까? 그것이 얼마나 일반화되겠습니까? 여러분은 어떤 가정을 세우셨습니까?
      &lt;/p&gt;
      &lt;p&gt;
      그래서, 저는 분명히 데이터 과학에 수많은 과학적인 요소가 있다고 생각하고, 이러한 작업을 하기 위해 과학적인 전문성이 필요하다고 생각하고, 이러한 작업을 할 때 과학적인 원리를 따를 필요가 있다고 생각하며, 그리고 이러한 것들을 익히는 작업이 여러분을 더욱 훌륭한 (가치있는) 데이터 과학자가 되도록 만든다고 생각합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;같은 주제를 다루는 &lt;a href=&quot;https://medium.com/towards-data-science/is-data-science-a-real-science-2920bb2529aa&quot;&gt;또 다른 글&lt;/a&gt;에서도 열린 마음으로 다른 사람들의 합리적인 의견을 수용하는 것, 비판 등 과학적 원리와 과학적 가치가 &quot;데이터 과학자&quot;에게 있어서 중요하다고 강조합니다. 이렇게 하지 않는 사람들이 얻은 결과는 아무리 좋아보여도 신뢰하기 어렵습니다.&lt;/span&gt; 나는 데이터 과학이 유용한 과학이라면, 그것이 진짜 과학이건 가짜 과학이건 상관 없다고 생각합니다.
      &lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/div&gt;
  &lt;h2&gt;데이터 과학은 과학이 아니다&lt;/h2&gt;
  &lt;p&gt;
  위에 인용한 글의 저자의 이야기처럼, &quot;데이터 과학&quot;을 &quot;과학&quot;으로, &quot;데이터 과학자&quot;를 &quot;과학자&quot;로 볼 수는 없겠습니다. 학계와 산업계를 통틀어 흔히 &quot;데이터 과학자&quot;로 불리는 사람들이 하는 일을 보면, 원인과 결과 사이의 관계&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이러한 인과 관계와 상관 관계를 혼동하지 않는 것은 아무리 강조해도 지나치지 않습니다.&lt;/span&gt;를 밝혀내는 일이 거의 없기 때문에, 오히려 &quot;데이터 공학&quot;이나 &quot;데이터 공학자&quot;라고 부르는 것이 훨씬 적절할 것 같습니다. 특히, 산업계에서는 돈을 잘 버는 기법이 최선이고 회사 정치에 따라 &quot;데이터 과학자&quot;가 문제를 해결하려는 상황에서 비과학적인 노가다 접근 방식을 강요 받을 가능성을 배제할 수 없기에 &quot;과학자&quot;로 부르기 더 힘들 것 같습니다. 
  &lt;/p&gt;
  &lt;p&gt;
  하지만, 무비판적으로 수용하여 널리 퍼져 이미 &quot;데이터 과학&quot;이라는 단어가 굳어가고 있다는 것도 무시할 수 없는 사실입니다. 그리고 위에 인용한 글의 시작 부분에서도 이야기하듯이 &quot;데이터 과학&quot;을 따질 때는 &quot;과학&quot; 단어가 들어가지만 엄밀하게는 과학이 아닌 다른 분야도 똑같이 따지고 들어가야 공평하겠습니다. 물고 늘어지기 좋아하는 사람도 있기 마련이고, 개떡같이 말해도 찰떡같이 알아듣는 사람도 있기 마련이니, 개인적으로는 &quot;데이터 과학&quot;이나 &quot;데이터 과학자&quot;라는 단어 자체를 설명해야할 때는 오해를 줄이는 방향으로 엄밀하게 하되, 어떤 일을 하고 있는지 위주로 전달할 생각입니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;하지만 미래에는 과학이 될 수도 있다&lt;/h2&gt;
  &lt;p&gt;
  &quot;데이터 과학자&quot;는 앞으로 어떻게 변할 것인지 궁금합니다. 이러한 궁금증을 해소하기 위해 여러가지 추측을 누구나 자유롭게 할 수 있겠지만, 앞으로 어떤 특징을 가진 데이터가 어디에서 어떻게 나올지와 밀접하게 관련이 있다고 보는 것이 가장 가까운 답일 것 같습니다. 사물인터넷(IoT)에서 앞으로 쏟아져 나올 데이터와 관련하여 이야기를 풀어나가는 것이 실현 가능성이 꽤 높은 편이라고 생각합니다. Dell EMC Services의 CTO인 Bill Schmarzo가 데이터 과학자의 정체성과 IoT를 주제로 &lt;a href=&quot;https://infocus.emc.com/william_schmarzo/data-science-really-science/&quot;&gt;2017년 1월 30일 작성한 글&lt;/a&gt;&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이 글의 제목도 &quot;데이터 과학은 정말로 과학인가?(Is Data Science Really Science?)&quot;입니다.&lt;/span&gt;이 있는데 일부를 한글로 옮겨 아래에 인용하였습니다.
  &lt;/p&gt;
  &lt;div class=&quot;epigraph&quot;&gt;
    &lt;blockquote&gt;
      &lt;p&gt;사물 인터넷과 왜의 &quot;탄생&quot;&lt;/p&gt;
      &lt;p&gt;
사물 인터넷(IOT; the Internet of Things) 시대에는 왜 특정한 입력이 예측 가능한 출력으로 나오는지 이해하고 문서화하는 일이 기업들에게 필요할 것입니다. 예를 들면, 제조업체들이 다음과 같은 질문에 답변하려고 노력하는 것을 통해, 어떤 제품의 특정 구성 요소들이 왜 자주 고장 났는지 이해하고 목록으로 만드는 것이 중요하게 될 것입니다.
      &lt;/p&gt;
      &lt;p&gt;
      - 구성 요소를 만드는 데 사용 된 재료 때문에 고장났습니까?&lt;br/&gt;
- 구성 요소의 설계 때문에 고장났습니까?&lt;br/&gt;
- 구성 요소의 사용 때문에 고장났습니까?&lt;br/&gt;
- 구성 요소의 설치 때문에 고장났습니까?&lt;br/&gt;
- 구성 요소의 유지 보수 때문에 고장났습니까?
      &lt;/p&gt;
      &lt;p&gt;
IOT 세상이 다가올 수록, 분석(analytics)과 물리학의 협업이 늘어나는 것을 보기 시작할 것입니다. GE 같은 회사들이 &quot;디지털 쌍둥이(Digital Twins)&quot;라는 개념을 가지고 하고 있는 일을 보시길 바랍니다.
      &lt;/p&gt;
      &lt;p&gt;
디지털 쌍둥이는 산업용 인터넷을 통해 새로운 사업 및 서비스 모델을 성장시키고 창출하기 위해, (제트 엔진에서 기관차까지) 모든 기계의 디지털 모델 또는 쌍둥이를 구축하는 작업을 포함합니다.
      &lt;/p&gt;
      &lt;p&gt;
디지털 쌍둥이는 다양한 용도로 사용할 수 있는 물리적 자산들의 전산화된 동반자입니다. 디지털 쌍둥이는 실제 물체에 설치된 센서의 데이터를 사용하여 실시간 상태, 작동 상태 또는 위치를 나타냅니다.
      &lt;/p&gt;
      &lt;p&gt;
GE는 제품 및 구성 요소의 물리적 구조를 반영하는 디지털 모델을 구축하고 있습니다. 이를 통해 새로운 제품 개발을 가속화 할 수 있으면서, 많은 상황에서 제품을 테스트하여 평균 고장 시간, 스트레스 저항력 및 구조적 부하와 같은 측정 기준을 결정할 수 있습니다.
      &lt;/p&gt;
      &lt;p&gt;
물리학의 세계와 IOT가 충돌함에 따라, 디지털 세계가 물리학, 공기 역학, 화학 및 전기와 같은 학문을 지배하는 법칙에 의해 지배되기 시작할 때, 데이터 과학자는 더욱 더 다른 &quot;과학자&quot;와 같이 변해갈 것입니다.
      &lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/div&gt;
  &lt;p&gt;
  제가 물리학과 출신이라서 그런지 위와 같은 미래를 빠른 시일 내에 만날 수 있기를 그리고 진정한 &quot;과학자&quot;의 정체성을 가지고 활동할 &quot;데이터 과학자&quot;가 늘어나길 기대합니다. 방대한 양의 제조업 데이터가 축적되고 있는 것과 이를 분석하는 이들이 점차 늘어나는 추세를 볼 때, 어쩌면 그리 먼 미래는 아닌 것 같기도 합니다. 그리고 이러한 활동 역시 기존 데이터 분석을 대체하기보다는 분석 업무의 지평을 넓히는 형태가 될 것 같습니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 200
});
&lt;/script&gt;
</description>
        <pubDate>Sun, 27 Aug 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/08/27/Is-data-science-real-science/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/08/27/Is-data-science-real-science/</guid>
        
        
      </item>
    
      <item>
        <title>논문 한글 요약 - arXiv:1608.07249v7</title>
        <description>&lt;section&gt;
  &lt;p&gt;
  이 글은 &quot;Benchmarking State-of-the-Art Deep Learning Software Tools&quot;라는 제목의 논문(&lt;a href=&quot;https://arxiv.org/abs/1608.07249v7&quot;&gt;arXiv:1608.07249v7&lt;/a&gt;) 내용을 아주 간단하게 요약한 것입니다. 논문에서는 최신 딥러닝 소프트웨어 5가지&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;&lt;a href=&quot;http://caffe.berkeleyvision.org/&quot;&gt;Caffe&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/cntk&quot;&gt;CNTK&lt;/a&gt;, &lt;a href=&quot;http://mxnet.io/&quot;&gt;MXNet&lt;/a&gt;, &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt;, &lt;a href=&quot;http://torch.ch/&quot;&gt;Torch&lt;/a&gt;&lt;/span&gt;의 단위 학습량 당 걸리는 시간을 크게 3가지&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;CPU only, single GPU, multi-GPU&lt;/span&gt; 상황에서 3가지 신경망&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;Fully Connected Network (FCN), Convolutional Neural Network (CNN), Recurrent Neural Network (RNN)&lt;/span&gt;을 단위 학습량 규모를 바꾸면서 비교합니다. 내용 요약은 다음과 같습니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;1. CPU only: BEST - TensorFlow&lt;/h2&gt;
  &lt;p&gt;
  TensorFlow가 가장 좋았습니다. 비교할 때 16개의 물리적인 CPU core까지 늘리면서 진행했다고 합니다.
  &lt;/p&gt;
  
  &lt;h2&gt;2. Single GPU&lt;/h2&gt;
  &lt;p&gt;
  &lt;ul&gt;
    &lt;li&gt;Fully Connected Network (FCN): &lt;a href=&quot;http://caffe.berkeleyvision.org/&quot;&gt;Caffe&lt;/a&gt;, &lt;a href=&quot;https://github.com/microsoft/cntk&quot;&gt;CNTK&lt;/a&gt;, &lt;a href=&quot;http://torch.ch/&quot;&gt;Torch&lt;/a&gt; &gt; &lt;a href=&quot;http://mxnet.io/&quot;&gt;MXNet&lt;/a&gt;, &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt; 라고 합니다.&lt;/li&gt;
    &lt;li&gt;Convolutional Neural Network (CNN): network가 큰 경우는 &lt;a href=&quot;http://mxnet.io/&quot;&gt;MXNet&lt;/a&gt;, 작은 경우는 &lt;a href=&quot;http://caffe.berkeleyvision.org/&quot;&gt;Caffe&lt;/a&gt;와 &lt;a href=&quot;https://github.com/microsoft/cntk&quot;&gt;CNTK&lt;/a&gt;도 좋았다고 합니다.&lt;/li&gt;
    &lt;li&gt;Recurrent Neural Network (RNN): &lt;a href=&quot;https://github.com/microsoft/cntk&quot;&gt;CNTK&lt;/a&gt;가 다른 4가지에 비해 LSTM을 이용하는 RNN&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;자세한 내용은 &lt;a href=&quot;http://aikorea.org/cs231n/convolutional-networks/&quot;&gt;이 글&lt;/a&gt;을 참조하시길 바랍니다.&lt;/span&gt;을 5-10배 빠르게 학습시킨다고 합니다. &lt;/li&gt;
  &lt;/ul&gt;  
  &lt;/p&gt;

  &lt;p&gt;
  &lt;figure&gt;
    &lt;img src=&quot;/images/2017-05-10/arXiv-1608-07249-v7-Figure1.png&quot;/&gt;    
  &lt;/figure&gt;
  위의 그림은 &lt;a href=&quot;https://arxiv.org/abs/1608.07249v7&quot;&gt;arXiv:1608.07249v7&lt;/a&gt;의 Figure 1입니다.
  &lt;/p&gt;

  &lt;h2&gt;3. Multi-GPU&lt;/h2&gt;
  &lt;p&gt;
  &lt;ul&gt;
    &lt;li&gt;FCN: &lt;a href=&quot;https://github.com/microsoft/cntk&quot;&gt;CNTK&lt;/a&gt;와 &lt;a href=&quot;http://mxnet.io/&quot;&gt;MXNet&lt;/a&gt;의 경우에, 학습량 규모를 고정하고 GPU 수를 1, 2, 4로 늘릴 때 처리 시간이 가장 잘 줄어든다고 합니다. GPU 개수를 늘릴 때 처리 시간이 잘 줄어들수록 여러개의 GPU를 더 효율적으로 사용한다는 의미입니다.&lt;/li&gt;
    &lt;li&gt;CNN(AlexNet): &lt;a href=&quot;http://mxnet.io/&quot;&gt;MXNet&lt;/a&gt;과 &lt;a href=&quot;http://torch.ch/&quot;&gt;Torch&lt;/a&gt;의 경우에, GPU 수를 위와 같이 늘리면 처리 시간이 가장 잘 줄어든다고 합니다. &lt;a href=&quot;https://github.com/microsoft/cntk&quot;&gt;CNTK&lt;/a&gt;는 &lt;a href=&quot;http://mxnet.io/&quot;&gt;MXNet&lt;/a&gt;과 &lt;a href=&quot;http://torch.ch/&quot;&gt;Torch&lt;/a&gt;에 비해 줄어드는 정도가 살짝 작지만 &lt;a href=&quot;http://caffe.berkeleyvision.org/&quot;&gt;Caffe&lt;/a&gt;나 &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt;보다는 훨씬 더 잘 줄어든다고 합니다.&lt;/li&gt;
    &lt;li&gt;CNN(ResNet): GPU를 1개만 사용했을 때는 &lt;a href=&quot;http://mxnet.io/&quot;&gt;MXNet&lt;/a&gt;이 가장 좋았지만, 여러개를 사용했을 때는 &lt;a href=&quot;http://torch.ch/&quot;&gt;Torch&lt;/a&gt;가 더 효율적인 것으로 나타났다고 합니다.&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;기타 사항&lt;/h2&gt;
  &lt;p&gt;
  &lt;ul&gt;
    &lt;li&gt;NVIDIA® GTX 980, NVIDIA® GTX 1080, NVIDIA® Tesla K80 GK210 중에서 NVIDIA® GTX 1080이 가장 좋았다고 합니다.&lt;/li&gt;
    &lt;li&gt;GPU를 사용할 때는 cuDNN을 꼭 설치하여 소프트웨어가 사용할 수 있도록 하기를 권장하고 있습니다.&lt;/li&gt;    
    &lt;li&gt;Convolution을 직접 계산하기보다는 FFT 하기를 권장하고 있습니다.&lt;/li&gt;
    &lt;li&gt;Multi-GPU 경우에 TensorFlow는 GPU 숫자를 1, 2, 4개로 늘려도 눈에 띄게 빨라지지는 않는다고 합니다.&lt;/li&gt;
  &lt;/ul&gt;
  &lt;/p&gt;
&lt;/section&gt;



&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 200
});
&lt;/script&gt;
</description>
        <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/05/10/Summary-arXiv-1608-07249-v7/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/05/10/Summary-arXiv-1608-07249-v7/</guid>
        
        
      </item>
    
      <item>
        <title>대한민국 시군구 행정구역 TopoJSON 지도(2016년2월)</title>
        <description>&lt;section&gt;
  &lt;p&gt;
  작업하는 자료를 &lt;a href=&quot;https://d3js.org/&quot;&gt;&lt;i&gt;d3.js&lt;/i&gt;&lt;/a&gt;로 대한민국 시군구 단위로 시각화하려는데 최신 &lt;a href=&quot;https://github.com/topojson/topojson&quot;&gt;TopoJSON&lt;/a&gt; 지도 파일을 찾기 힘들었습니다. 찾을 수 있는 파일에서는 세종시가 없거나, 세종시가 있더라도 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%B2%AD%EC%A3%BC%EC%8B%9C%EC%9D%98_%ED%96%89%EC%A0%95_%EA%B5%AC%EC%97%AD&quot;&gt;청주 청원구와 서원구&lt;/a&gt;&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;2014년 7월 1일 청원군과 통합하면서 청원구와 서원구가 새로 설치되었습니다.&lt;/span&gt;가 없었습니다. 그래서 대한민국 시군구 TopoJSON 지도를 직접 만들었습니다. 이 글에서는 만든 과정과 결과 파일을 소개하겠습니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;1. 데이터&lt;/h2&gt;
  &lt;p&gt;
  &lt;a href=&quot;http://www.gisdeveloper.co.kr/?p=2332&quot;&gt;이곳&lt;/a&gt;에서 2016년 2월 대한민국 시군구 행정구역 &lt;a href=&quot;https://en.wikipedia.org/wiki/Shapefile&quot;&gt;SHP 파일&lt;/a&gt;을 내려받습니다. 압축을 풀고 &lt;code&gt;TL_SCCO_SIG.shp&lt;/code&gt; 파일을 사용합니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;2. SHP → GeoJSON&lt;/h2&gt;
  &lt;p&gt;
  내려받은 SHP 파일은 EPSG:5178 좌표계를 사용합니다. 다음과 같이 crs:84 좌표계를 사용하는 GeoJSON 으로 바꿉니다. CP949 인코딩으로 기록된 행정구역명 인코딩을 좌표계와 형식을 바꿀 때 보존합니다. 
    &lt;label for=&quot;mn-demo&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;mn-demo&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;marginnote&quot;&gt;출처: &lt;a href=&quot;https://www.slideshare.net/jangbi882/1geo-server-30331526&quot;&gt;여기&lt;/a&gt;의 33번째 슬라이드&lt;/span&gt;
    &lt;pre class=&quot;code&quot;&gt;
  ogr2ogr -s_srs EPSG:5178 -t_srs crs:84 -f GeoJSON -skipfailures --config SHAPE_ENCODING &quot;CP949&quot; TL_SCCO_SIG_crs84.geojson TL_SCCO_SIG.shp
    &lt;/pre&gt;
  &lt;/p&gt;
  &lt;p&gt;
  위의 작업은 Ubuntu 14.04 에서 하였습니다.  
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;3. 지도 매끄럽게 하기&lt;/h2&gt;
  &lt;p&gt;
  2번 과정에서 얻은 GeoJSON 파일에는 행정구역 구분선, 해안선, 섬 등이 자세하게 나와있어서 용량이 큽니다. QGIS 최신 버전으로 지도를 매끄럽게 하여 용량을 줄입니다.
  &lt;/p&gt;
  &lt;h3&gt;&lt;code&gt;multiparts → single part&lt;/code&gt;&lt;/h3&gt;
  &lt;p&gt;
  QGIS로 파일을 열면 다음과 같이 화면에 지도가 나옵니다.
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/QGIS-open-default.png&quot;/&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  &lt;code&gt;Ctrl + a&lt;/code&gt;로 모든 구역을 선택하면 색이 바뀝니다.
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/multi-to-single-01.png&quot;/&gt;
  &lt;/figure&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/multi-to-single-02.png&quot;/&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  위와 같이 Run 버튼을 클릭하면 아래와 같이 한 행정구역이지만 붙어있지 않은 섬 같은 부분을 분리합니다.
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/multi-to-single-03.png&quot;/&gt;
  &lt;/figure&gt;


  &lt;h3&gt;Select by &lt;code&gt;$area&lt;/code&gt;&lt;/h3&gt;
  &lt;p&gt;
  Single part로 분리하면 이제 닫힌 shape의 면적을 기준으로 너무 작은 섬들을 골라낼 수 있습니다. 다음과 같이 &quot;계산식으로 선택...&quot; 메뉴를 열어봅시다. 
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/select-by-expression-01.png&quot;/&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  아래와 같이 면적 0.01로 입력하니 너무 작아서 선택이 안 되는 곳도 있습니다. 개인적으로는 선택 버튼을 눌러도 해당 창이 닫히지 않으니 값을 바꾸면서 확인하고 선택할 수 있는 부분이 마음에 듭니다.
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/select-by-expression-02.png&quot;/&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  더 줄였더니 독도의 서도만 선택이 됩니다.
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/select-by-expression-03.png&quot;/&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  아래와 같이 살짝 더 줄이니 동도와 서도 모두 선택이 됩니다. 그리고 주변의 작은 섬은 선택이 되지 않습니다. 저는 대한민국의 영토인 독도의 동도와 서도가 모두 선택되는 이 값을 기준으로 너무 작은 섬들을 걸러냈습니다.
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/select-by-expression-04.png&quot;/&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  이제 걸러낸 결과를 GeoJSON 형태로 저장합니다. 저는 &lt;code&gt;TL_SCCO_SIG_crs84-m2s.geojson&lt;/code&gt;라고 저장하였습니다.
  &lt;/p&gt;
  
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;4. GeoJSON → TopoJSON&lt;/h2&gt;
  &lt;p&gt;
  아래와 같이 TopoJSON CLI (Command Line Interface)을 설치합니다. 설치하려면 node.js package manager (npm)을 먼저 설치하시길 바랍니다. 
    &lt;pre class=&quot;code&quot;&gt;
    npm install -g topojson
    &lt;/pre&gt;
  &lt;/p&gt;
  &lt;p&gt;
  Windows에서는 topojson 패키지가 잘 작동하지 않아서 아래 작업은 Ubuntu 14.04 에서 하였습니다.  
    &lt;pre class=&quot;code&quot;&gt;
    geo2topo TL_SCCO_SIG_crs84-m2s.geojson &gt; TL_SCCO_SIG_crs84-m2s-topo.json
    &lt;/pre&gt;
  &lt;/p&gt;
  &lt;p&gt;
    이제 TopoJSON 파일을 얻었습니다. 하지만 아직도 10MB 가량으로 웹에서 사용하기에는 용량이 큽니다. 그래서 다음과 같이 압축합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이 내용은 &lt;a href=&quot;https://d3js.org/&quot;&gt;&lt;i&gt;d3.js&lt;/i&gt;&lt;/a&gt;를 만든 &lt;a href=&quot;https://medium.com/@mbostock/command-line-cartography-part-3-1158e4c55a1e&quot;&gt;Mike Bostock 님의 글&lt;/a&gt;을 참조하였습니다.&lt;/span&gt;
    &lt;pre class=&quot;code&quot;&gt;
    topoquantize 1e4 &lt; TL_SCCO_SIG_crs84-m2s-topo.json &gt; TL_SCCO_SIG_crs84-m2s-quantized1e4-topo.json
    &lt;/pre&gt;
  &lt;/p&gt;
  &lt;p&gt;
    이제 2MB 미만이 되었습니다! 위의 명령어는 topojson 패키지를 설치하면 사용할 수 있습니다. 2016년 2월 SHP 파일을 가지고 만든 시군구 TopoJSON 지도를 &lt;a href=&quot;http://danielykim.me/visualizations/South_Korea_population_density/json/TL_SCCO_SIG_crs84-m2s-quantized1e3-topo.json&quot;&gt;여기&lt;/a&gt;에 올려두었고 자유롭게 내려받아 사용하시길 바랍니다. &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;&lt;img alt=&quot;크리에이티브 커먼즈 라이선스&quot; style=&quot;border-width:0&quot; src=&quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;이 저작물은 &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;크리에이티브 커먼즈 저작자표시-동일조건변경허락 4.0 국제 라이선스&lt;/a&gt;에 따라 이용할 수 있습니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;5. 예제: 대한민국 인구밀도&lt;/h2&gt;
  &lt;p&gt;
  &lt;a href=&quot;http://kosis.kr/statisticsList/statisticsList_01List.jsp?vwcd=MT_ZTITLE&amp;parentId=H#SubCont&quot;&gt;국가통계포털&lt;/a&gt;에서 행정구역별 인구는 2015 인구주택총조사 자료를, 면적은 2017년 자료를 내려받아 사용하였습니다. d3.js v4를 이용하여 인구밀도를 &lt;a href=&quot;http://danielykim.me/visualizations/South_Korea_population_density/black.html&quot;&gt;검은 배경&lt;/a&gt;과 &lt;a href=&quot;http://danielykim.me/visualizations/South_Korea_population_density/white.html&quot;&gt;흰 배경&lt;/a&gt; 두 가지로 나타냈습니다. 특별히 &lt;a href=&quot;http://danielykim.me/visualizations/South_Korea_population_density/black.html&quot;&gt;검은 배경&lt;/a&gt;에서는 &lt;a href=&quot;https://github.com/bokeh/colorcet&quot;&gt;fire&lt;/a&gt; 색상 팔레트를 사용하였습니다.
  &lt;/p&gt;
  &lt;figure class=&quot;fullwidth&quot;&gt;
    &lt;a href=&quot;http://danielykim.me/visualizations/South_Korea_population_density/&quot;&gt;
    &lt;img src=&quot;/images/2017-04-29/South-Korea-population-density-maps.png&quot;/&gt;    
    &lt;/a&gt;
  &lt;/figure&gt;
&lt;/section&gt;


&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 200
});
&lt;/script&gt;
</description>
        <pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/04/29/Korea-TopoJSON-map-for-d3/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/04/29/Korea-TopoJSON-map-for-d3/</guid>
        
        
      </item>
    
      <item>
        <title>대학원생 그래프에 반드시 필요한 것들</title>
        <description>&lt;section&gt;
  &lt;p&gt;
  이 글에서는 대학원생이 그래프를 그릴 때 꼭 해야할 것을 이야기하려고 합니다. 여기에서 이야기하는 내용은 아주 중요한 필수 사항입니다. 이러한 필수 사항을 안 챙기고 그림을 급하게 그려서 지도 교수님께 가져가면 거의 100% 혼날 것입니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;지도 교수님의 성격이 좋으면 안 혼나겠습니다. 물론 잘 그려가도 혼날 수 있습니다.&lt;/span&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;p&gt;
    아래 내용은 반드시 챙깁시다.
    &lt;ol&gt;
      &lt;li&gt;1. 가로축과 세로축 라벨을 항상 붙입시다. 그렇지 않으면 아무 의미 없는 그림 파일일 뿐입니다.&lt;/li&gt;
      &lt;li&gt;2. 두 종류 이상의 서로 다른 데이터를 line graph, scatter plot 등으로 나타낼 때는 범례(legend)를 항상 넣읍시다. 그렇지 않으면 도대체 뭐가 뭔지 알 수 없을 것입니다.&lt;/li&gt;
      &lt;li&gt;3. 여러 표본(sample)에 대해 반복하여 결과를 얻었으면 error bar&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이건 최소한의 조언입니다. 상황에 따라 &lt;a href=&quot;http://blog.revolutionanalytics.com/2009/09/making-barplots-with-error-bars-in-r.html&quot;&gt;Box plot&lt;/a&gt;, &lt;a href=&quot;http://www.originlab.com/doc/Tutorials/ErrorBar-FillArea&quot;&gt;Shaded area plot&lt;/a&gt;, &lt;a href=&quot;http://seaborn.pydata.org/generated/seaborn.violinplot.html&quot;&gt;Violin plot&lt;/a&gt;등으로 나타냅시다. 개인적으로는 Box plot을 그릴 바에는 Violin plot을 그리겠습니다.&lt;/span&gt;를 그립시다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;p&gt;
  그래프를 그리는 것은 이공계 대학원생&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;실험을 하는 연구실이나 하지 않는 이론 연구실 모두.&lt;/span&gt;이 가장 많이 하는 작업 중의 하나일 것입니다. 연구하는 과정에서 얻은 중간 결과를 graph, figures, illustration 등으로 나타냅니다. 그래프 그리는 일은 대학원생의 일상이라고 할 수 있겠습니다. 지도 교수님 포함하여 연구실 사람들이 참여하는 랩미팅 시간에 이야기하거나 지도 교수님과 1:1로 이야기 할 때, 그린 것을 가지고 간다음 같이 보면서 이야기합니다. 얻은 중간 결과 그림을 잘못 그리거나 이상하게 그리면, 하려는 이야기를 제대로 전달하기 힘들고, 심지어 데이터가 틀리지 않았더라도 연구 결과가 의심받을 수도 있습니다.
  &lt;/p&gt;
  &lt;p&gt;
  오늘 이야기는 최소한의 조언입니다. 이 정도로는 여러 가지 면&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;Informative한 그림이 되기에. 눈에 띄는 그림이 되기에. 논문 그림이 되기에.&lt;/span&gt;에서 한참 부족합니다. 다음 글에서는 그래프를 더욱 잘 그리는 방법을 다루겠습니다.
  &lt;/p&gt;
&lt;/section&gt;



&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 200
});
&lt;/script&gt;
</description>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/04/23/Give-first-aid-to-your-figures-part1/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/04/23/Give-first-aid-to-your-figures-part1/</guid>
        
        
      </item>
    
      <item>
        <title>탐험적 데이터 분석</title>
        <description>&lt;section&gt;
  &lt;p&gt;
  아래는 Hadley Wickham&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;&lt;a href=&quot;https://www.rdocumentation.org/trends&quot;&gt;R 사용자들이 지금까지 가장 많이 내려받은 패키지&lt;/a&gt;인 dplyr와 ggplot2를 만든 사람입니다.&lt;/span&gt;이 지은 &lt;a href=&quot;http://r4ds.had.co.nz/explore-intro.html&quot;&gt;&lt;em&gt;R for Data Science&lt;/em&gt;&lt;/a&gt; 1장과 2장에 있는 그림입니다. 이 글에서는 아래의 그림에 나타난 순서대로 &lt;em&gt;탐험적 데이터 분석&lt;/em&gt;의 각 과정을 소개하고 특별히 모델링에 관한 내용을 강조하겠습니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;아주 짧게 결론부터 이야기하면, 이 모델링에서 가치가 창출되기 때문입니다. 구체적인 내용은 아래에서 다루겠습니다.&lt;/span&gt; 그리고 일반적인 과학 활동보다는 비즈니스 상황에서 데이터 과학자가 일하는 방식, 겪게되는 상황 등을 위주로 다루겠습니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;figure&gt;
    &lt;label for=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;marginnote&quot;&gt;출처: Hadley Wickham, &lt;a href=&quot;http://r4ds.had.co.nz/explore-intro.html&quot;&gt;&lt;em&gt;R for Data Science&lt;/em&gt;.&lt;/a&gt;&lt;br/&gt; 이 그림은 &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/3.0/us/&quot;&gt;미국 Creative Commons Attribution-NonCommercial-NoDerivs 3.0 라이선스&lt;/a&gt;에 의해 보호 받고 있습니다. 이 그림은 상업적으로 이용할 수 없고, 재조합하거나 변형해서 배포할 수 없습니다.&lt;/span&gt;
    &lt;img src=&quot;http://r4ds.had.co.nz/diagrams/data-science-explore.png&quot; alt=&quot;탐험적 데이터 분석 - 탐색&quot; /&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  그림에서 왼쪽부터 번호를 붙여 하나씩 살펴보겠습니다.
    &lt;ol&gt;
      &lt;li&gt;1. 부르기 Import&lt;/li&gt;
      &lt;li&gt;2. 깔끔하게 만들기 Tidy&lt;/li&gt;
      &lt;li&gt;3. 바꾸기 Transform&lt;/li&gt;
      &lt;li&gt;4. 시각화 Visualise&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;원문 그림을 따라 &lt;i&gt;Visualize&lt;/i&gt; 대신 영국식 영어 철자 &lt;i&gt;Visualise&lt;/i&gt; 로 표기합니다.&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;5. 모델링 Model&lt;/li&gt;
      &lt;li&gt;6. 소통 Communicate&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/p&gt;
  &lt;p&gt;
  데이터 과학자라면 학문적인 배경&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;흔히 비즈니스 상황에서 데이터 과학자가 될 수 있는 학문적인 배경에는 컴퓨터 과학/공학/전산학, 통계학, 생물학, 물리학, 수학 등이 있습니다. 수학과 컴퓨터를 잘한다면 경제학이나 사회학도 가능합니다. 물론, 보유 기술과 연구 주제에 따라 자세한 구분이 필요합니다.&lt;/span&gt;에 상관 없이 주로 위의 순서로 일합니다. 모든 단계가 중요하지만 탐험적 데이터 분석의 핵심이라고 할 수 있는 3번부터 5번이 특별히 더 중요합니다. 그럼 이제 각 단계를 하나씩 살펴보겠습니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;1. 부르기 Import&lt;/h2&gt;
  &lt;p&gt;
  당연하게도 데이터를 불러오지 않으면 데이터가 있을 수가 없습니다. 이 과정이 없으면 데이터 없는 데이터 과학자가 됩니다. 데이터 엔지니어(Data Engineer)가 불러오는 작업을 맡는 경우에는 데이터 과학자가 직접 불러오지 않아도 됩니다. 직접 맡지 않더라도 &lt;i&gt;풀려고 하는 비즈니스 문제&lt;/i&gt;&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이 부분에 관하여 더욱 자세한 논의는 &lt;a href=&quot;http://www.ciokorea.com/news/33206&quot;&gt;김진철 님께서 CIO Korea에 기고하신 글&lt;/a&gt;을 참조하시길 바랍니다.&lt;/span&gt;에 맞는 데이터를 불러오도록 충분한 협의가 필요합니다. 협의 과정에서 &lt;i&gt;해당 문제&lt;/i&gt;를 풀 때 필요한 데이터가 없다는 것을 알게 될 수도 있습니다. 이렇게 데이터가 부족한 경우에는 의뢰인과 협의하며 풀려는 문제를 수정해야할 수도 있습니다.
  &lt;/p&gt;
  &lt;p&gt;
문제를 구체적으로 잘 정하는 것은 아무리 강조해도 지나치지 않을만큼 정말 중요합니다. 과정의 시작부터 잘 정하지 못하더라도 탐험적 데이터 과정을 통해 문제를 수정하거나 이상한 데이터를 찾을 수도 있습니다. 어떤 경우에는 처음 정한 문제에만 딱 맞게 데이터를 불러와서 문제가 수정되었을 때 데이터가 큰데도 새로 불러와야 하는 경우가 생깁니다. 따라서 가능한 변수의 합집합을 미리 추리면서 쓸모 없는 변수를 정성적으로 쳐내는 과정도 중요합니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;h2&gt;2. 깔끔하게 만들기 Tidy&lt;/h2&gt;
  &lt;p&gt;
  이 Tidy 과정은 분석하기 좋도록 깔끔하게 만드는 과정입니다. 단순한 원본 데이터를 단순하게 정리data cleaning하는 것보다 체계적인 의미가 있습니다. 1번 과정처럼 2번 과정 역시 데이터 엔지니어가 맡는다면 데이터 과학자가 직접 하지 않아도 됩니다.
  &lt;/p&gt;
  &lt;p&gt;
  분석하기 좋도록 깔끔하게 만든 데이터는 다음과 같은 성질이 있습니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;출처: &lt;a href=&quot;http://vita.had.co.nz/papers/tidy-data.html&quot;&gt;Hadley Wickham, &quot;Tidy Data&quot;, &lt;i&gt;The Journal of Statistical Software&lt;/i&gt;, &lt;b&gt;59&lt;/b&gt; (2014).&lt;/a&gt;&lt;/span&gt;
    &lt;ol&gt;
      &lt;li&gt;1. 각 변수가 한 열을 구성합니다.&lt;/li&gt;
      &lt;li&gt;2. 각 관측이 한 행을 구성합니다.&lt;/li&gt;
      &lt;li&gt;3. 각 관측 단위의 종류가 하나의 표를 구성합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/p&gt;
  &lt;p&gt;
  위의 성질을 이해하는데 도움이 되도록 아래에 표 3개&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;Hadley Wickham이 &lt;a href=&quot;http://vita.had.co.nz/papers/tidy-data.html&quot;&gt;논문&lt;/a&gt;에서 사용했던 예제 표 3개를 한글로 옮긴 것입니다.&lt;/a&gt;&lt;/span&gt;를 인용하였습니다. 바로 아래에 있는 표1에는 사람마다 처방 종류에 따라 결과값이 있습니다.
  &lt;/p&gt;
  
  &lt;table style=&quot;width:25%; margin-left:0px;&quot;&gt;
    &lt;caption&gt;표 1.&lt;/caption&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;처방a&lt;/th&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;처방b&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람1&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람2&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람3&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;

  &lt;p&gt;
  아래의 표2는 위의 표1에서 가로와 세로만 뒤집은 것입니다.
  &lt;/p&gt;

  &lt;table style=&quot;width:25%; margin-left:0px;&quot;&gt;
    &lt;caption&gt;표 2.&lt;/caption&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;사람1&lt;/th&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;사람2&lt;/th&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;사람3&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;처방a&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;-&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;처방b&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
  
  &lt;p&gt;
  표3은 표1과 표2에서 사용한 것과 정확하게 같은 데이터를 나타낸 것입니다. 하지만 표1과 표2와는 다르게, 표3에서는 변수마다 열을 이루고 각 관측값이 행을 이룹니다.
  &lt;/p&gt;

  &lt;table style=&quot;width:25%; margin-left:0px;&quot;&gt;
    &lt;caption&gt;표 3.&lt;/caption&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;이름&lt;/th&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;처방&lt;/th&gt;
      &lt;th style=&quot;text-align:center;&quot;&gt;결과&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람1&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;a&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람2&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;a&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람3&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;a&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람1&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;b&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람2&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;b&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;사람3&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;b&lt;/td&gt;
      &lt;td style=&quot;text-align:center;&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
 
  &lt;p&gt;
  표3과 같이 나타내면 여러 가지 장점이 있겠습니다만 한 가지만 들어보겠습니다. &lt;a href=&quot;https://en.wikipedia.org/wiki/Iris_flower_data_set&quot;&gt;Iris data&lt;/a&gt;를 가지고 그린 아래 그림에서처럼 종(Species)마다 색을 입혀서 종별로 패턴을 비교할 수 있게 됩니다.
  &lt;/p&gt;

  &lt;figure&gt;
    &lt;label for=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;marginnote&quot;&gt;출처: &lt;a href=&quot;https://www.mailman.columbia.edu/sites/default/files/media/fdawg_ggplot2.html&quot;&gt;Data Visualization with ggplot2&lt;/a&gt;&lt;/span&gt;
    &lt;img src=&quot;/images/2017-04-22/sepal_length_vs_sepal_width.png&quot; alt=&quot;&quot; /&gt;
  &lt;/figure&gt;

  
&lt;/section&gt;


&lt;section id=&quot;03-transform&quot;&gt;
  &lt;h2&gt;3. 바꾸기 Transform&lt;/h2&gt;
  &lt;p&gt;
  이 단계부터가 본격적인 &lt;i&gt;탐험적 데이터 분석&lt;/i&gt; 과정입니다. 파이썬 pandas 라이브러리 문서의 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/groupby.html&quot;&gt;Group By 항목&lt;/a&gt;에서 설명하는 것처럼, 무리지어 종합하거나, 수학적으로 값을 적절히 변환하거나, 데이터에서 일부를 추출할 수도 있습니다. 문제를 풀려고 세운 가설을 검증하는데 도움이 될만한 패턴을 찾기 위해서 이런 작업을 합니다. 이 단계를 종종 여러번 수행하기 때문에 데이터가 너무 클 때는 전체 데이터를 가지고 하기보다는, 데이터 전체를 대표하는 항목들을 가지고 합니다. 또는 데이터 전체를 대표하는 항목을 여러번 골라서 통계적인 분석을 수행하기도 합니다. 다양한 방법 중에서 문제를 풀려고 세운 가설에 적합한 방식을 고릅니다. 
  &lt;/p&gt;
&lt;/section&gt;


&lt;section id=&quot;04-visualise&quot;&gt;
  &lt;h2&gt;4. 시각화 Visualise&lt;/h2&gt;
  &lt;p&gt;
  이 과정에서는 변수 각각의 통계적인 패턴을 보기도 하고, 변수마다 나타나는 통계적인 패턴을 서로 비교하기도 합니다. 또는 이러한 패턴의 시간적인 변화를 보기도 합니다. 이 역시 문제를 풀려고 세운 가설을 검증하는데 도움이 될만한 패턴을 찾기 위해서 이런 작업을 수행합니다. 때때로 같은 데이터라도 시각화 방법에 따라 다른 직관을 줄 수도 있기 때문에 같은 데이터를 다양한 방식으로 여러번 그리기도 합니다. 시각화 방식에 따라 잃는 정보의 수준이 다를 수도 있습니다. 이 4번째 단계에서 특이하거나 이상한 값을 발견하기도 합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;이러한 상황이 생기면 3단계를 다시 수행하거나 심각하면 1단계부터 다시 해야할 수도 있습니다.&lt;/span&gt; 데이터 과학자의 숙련도에 따라, 데이터 속에서 적절한 패턴을 찾기 위해 헤메는 시간이 줄어들 것입니다.
  &lt;/p&gt;
  &lt;p&gt;
  바꾸기 단계를 거쳐 시각화 단계까지만 와서 작업을 멈춘다면 다음과 같은 이야기를 들을 것입니다. &quot;So what!? 그래서 어쩌자는 겁니까?&quot; 반드시 설명을 하기 위해서는 모델링이 필요합니다. 설명이 있어야 정량적인 기준이나 예측이 따라 나옵니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;!--section&gt;
  &lt;div class=&quot;epigraph&quot;&gt;
    &lt;blockquote&gt;
      &quot;Simplicity is the ultimate sophistication.&quot;
      &lt;footer&gt;- Leonardo da Vinci&lt;/footer&gt;
    &lt;/blockquote&gt;
    &lt;blockquote&gt;
      &quot;Make things as simple as possible, but not simpler.&quot;
      &lt;footer&gt;- Albert Einstein&lt;/footer&gt;
    &lt;/blockquote&gt;
  &lt;/div&gt;
&lt;/section--&gt;

&lt;section id=&quot;05-model&quot;&gt;
  &lt;h2&gt;5. 모델링 Model&lt;/h2&gt;
  &lt;p&gt;
  모델링 과정은 &lt;i&gt;탐험적 데이터 분석&lt;/i&gt;의 핵심이고 데이터 과학자의 역할이라고도 할 수 있겠습니다. 데이터에서 나타나는 패턴을 설명하는 과정입니다. 데이터를 산더미 같이 많이 모으는 것은 기술적으로는 대단한 일이고 중요한 일입니다. 하지만 그 데이터 자체만으로는 별 의미가 없습니다. 데이터를 많이 모으는 것은 데이터 과학자의 정체성이 아닙니다. 결국에는 잘 설명해야합니다. 데이터를 설명하지 않는 것은 뭔가를 지을 때 건축 자재를 일단 몽땅 가져다 놓기만 하고 아무일도 하지 않는 것과 같습니다. 열심히 모은 데이터를 체계적인 설명해야 정량적인 기준이나 예측이 따라 나올 수 있습니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;물론, 엉뚱한 데이터를 쓸데없이 많이 모으기만 하면 안 나오겠습니다.&lt;/span&gt;
  &lt;/p&gt;
  &lt;p&gt;
  잘 설명하려면 먼저 문제를 분명하게 정하는 것이 중요합니다.
  &lt;/p&gt;
  &lt;p&gt;
  이미 알려진 시스템에 관한 설명을 많이 알고 있으면, 다루고 있는 시스템에서 나타나는 현상과 비교하여 비유를 통해 잘 설명할 수도 있습니다. 꼭 정량적인 설명이 아닐 수도 있습니다. 융합적인 생각이 중요할 수 있습니다.
  &lt;/p&gt;
  &lt;figure&gt;
    &lt;img src=&quot;/images/2017-04-22/Quotations-Leonardo_da_Vinci-Albert_Einstein.png&quot; alt=&quot;탐험적 데이터 분석 - 탐색&quot; /&gt;
  &lt;/figure&gt;
  &lt;p&gt;
  또한 세련된 설명은 위의 그림에서 다빈치와 아인슈타인의 말과 같이 단순해야한다고 생각합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;물론, 너무 단순해서 설명을 잘 못하면 안 되겠습니다.&lt;/span&gt; 복잡해지면 유지 보수 운영 측면에서 걷잡을 수 없는 혼란에 빠지기 쉽상입니다. 처음부터 모델을 복잡하게 세우면, 잘 세웠다면 유지 보수 운영하는 사람들이 굳이 하지 않아도 될 일이 생깁니다. 다루는 시스템에서 굳이 넣을 필요 없는 수학적인 방법을 몽땅 때려 넣고 온갖 조건문으로 뒤범벅되어있는 &lt;i&gt;스파게티 모델&lt;/i&gt;&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;&lt;i&gt;스파게티 코드&lt;/i&gt;와 비슷한 의미에서 사용했습니다.&lt;/span&gt;을 피합시다!
  &lt;/p&gt;
  &lt;p&gt;
  이는 회사를 다니면서 궁극의 법칙을 찾자는 이야기가 결코 아닙니다. 비즈니스 상황에서는 모델이 adaptive하고 flexible 해도 괜찮습니다. 기업에 커다란 손해를 끼치 수 있는 &lt;i&gt;스파게티 모델&lt;/i&gt;을 피하자는 것입니다. 이것을 어떻게 피해야 하겠습니까? 먼저, 데이터 과학자 본인이 통계, 수학 등 이론적인 부분을 챙기면서 꾸준한 프로젝트 참여를 통해 뒤처지지 않아야겠습니다. 소속 회사에서 동료 데이터 과학자들과 함께 자신의 모델링 과정을 peer review 받는 것도 훌륭하게 모델링할 때 도움이 될 것입니다.
  &lt;/p&gt;
  &lt;p&gt;
  그렇다고 데이터 과학자 혼자 노력한다고 해서 &lt;i&gt;스파게티 모델&lt;/i&gt;이 반드시 생기지 않는 것은 아닙니다. 데이터 과학 업무를 의뢰하는 회사나 담당자로부터 마케팅 측면에서 말도 안되는 방식으로 수학적인 기법을 무리하게 동원하도록 압박을 받아서 강제로 생기기도 합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;의뢰하는 측은 &quot;우리 회사도 (요즘 유행하는) A라는 기법을 사용하여 혁신을 이뤄냈습니다!&quot;라고 말하고 싶어하는 과도한 욕심을 자제할 필요가 있습니다.&lt;/span&gt; 보통 이런 참사는 의뢰하는 고객사가 인건비 때문에 데이터 과학자를 운용하기 힘든 기업인 경우보다는, 고객사가 경제적으로 풍족하고 특정 업종을 선도하는 기업인 경우에 일어납니다. 물론, 자체적으로 데이터도 많고 데이터 과학자를 운용할 경제적인 여유가 있으면 좋겠지만 모두가 이와 같을 수 없습니다.
  &lt;/p&gt;
  &lt;p&gt;
  약간 벗어나는 다른 이야기지만, 모델링과 관련 있는 짧은 일화를 하나 소개하려고 합니다. 비즈니스 상황에서는 탐험적 데이터 분석 과정을 통해 단순하고 세련된 모델을 세우면 &quot;그건 저도 할 수 있겠습니다&quot;라고 무시하는 투가 섞인 말을 듣는 경우도 있습니다. 결코 쉽지 않은 과정을 통해서 얻은 결과인데도 말입니다. 때로는 학계에서 사용하던 기법에 비해 덜 복잡하다는 의미에서나 구현하는데 시간이 덜 든다는 의미에서 쉽다고 말하면, 듣는 사람들이 순진하게 곧이곧대로 받아들여 전문가가 아니더라도 누구나 쉽게 할 수 있는 것처럼 오해받는 경우도 있습니다.
  &lt;/p&gt;
  &lt;p&gt;
  여기까지가 Transform, Visualise, Model (TVM) 으로 정리할 수 있는 Exploratory Data Analysis (EDA)의 핵심 내용입니다. 이렇게 의미있는 패턴이나 특징을 찾아내기 위해서 다양한 수학적인 양을 측정해서 보고 비교하는 TVM 과정은 보통 한 번에 끝나지 않을 수 있습니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;수행하는 데이터 과학자가 이미 잘 알고 있는 현상에 관한 데이터를 다룰 때는 비교적 수월할 것입니다.&lt;/span&gt; 반복될 수 있기 때문에 처음부터 모든 데이터를 가지고 TVM을 하기보다는 데이터를 잘 대표하는 표본을 가지고 작업한 다음에 일반화 합니다. 가볍고 빠르게 TVM을 반복하기 위해 Python &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter&lt;/a&gt; notebook이나 &lt;a href=&quot;https://www.rstudio.com/&quot;&gt;R Studio&lt;/a&gt; 등을 적절하게 사용하는 것을 권장합니다. 한편, TVM 과정을 여러번 반복하다보면 작성한 코드나 얻은 부산물/산출물 등이 지저분하게 흩어지기 쉽습니다. 그래서 구현, 유지, 보수 등이 어렵게 됩니다. 처음부터 알아보기 쉽게 정리한다면 이후에 넘겨 받는 사람에게 굳이 하지 않아도 될 번거로운 일이 생기지 않을 것입니다.
  &lt;/p&gt;
&lt;/section&gt;


&lt;section&gt;
  &lt;h2&gt;6. 소통&lt;/h2&gt;
  &lt;p&gt;
  이 과정에서는 설명한 결과를 가지고 의뢰한 회사나 담당자와 함께 이야기합니다.&lt;label for=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sn-extensive-use-of-sidenotes&quot; class=&quot;margin-toggle&quot;/&gt;&lt;span class=&quot;sidenote&quot;&gt;일방적인 보고가 될 수도 있겠지만&lt;/span&gt; 기존에 정성적으로 알고 있었거나 사용하고 있던 방식과 비교하기도 합니다. 3, 4, 5단계를 순서대로 거쳐 6단계에 도착하기보다는, 각 단계에서 언제든지 소통이 필요하면 이 단계로 넘어와서 다시 돌아갑니다. 해당 업종을 잘 알고 있는 데이터 과학자라면 이 단계를 덜 거치겠지만, 그렇지 않은 경우에는 열린 마음으로 이 과정을 많이 거치는 것이 모두가 만족할 수 있는 결과로 이어질 것입니다.
  &lt;/p&gt;
&lt;/section&gt;



&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/inlineDisqussions.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 250
});
&lt;/script&gt;
</description>
        <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/04/22/Exploratory-Data-Analysis/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/04/22/Exploratory-Data-Analysis/</guid>
        
        
      </item>
    
      <item>
        <title>데이터 과학자 되기 - 8단계 과정</title>
        <description>&lt;section&gt;
  &lt;p&gt;
    이 글은 &quot;Karlijn Willems&quot;님이 DataCamp 블로그에 올리신 &lt;a href=&quot;https://www.datacamp.com/community/tutorials/learn-data-science-infographic&quot;&gt;&quot;Learn Data Science - Infographic&quot;&lt;/a&gt;라는 글을 한글로 옮겨 사용하여 글쓴이의 생각과 함께 남긴 것입니다. 데이터 과학자가 되는 과정을 8단계로 소개하는 내용입니다. 순서는 아래와 같이 원문의 것을 따릅니다. 
  &lt;/p&gt;
&lt;/section&gt;

&lt;section&gt;
  &lt;p&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#01-Math-Stat-ML&quot;&gt;1. 수학, 통계, 기계학습을 공부하자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#02-Learn-to-code&quot;&gt;2. 코딩을 배우자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#03-Understand-DB&quot;&gt;3. 데이터베이스를 이해하자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#04-Explore-Data-Science-Workflow&quot;&gt;4. 데이터 과학 업무 순서를 경험하자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#05-Level-Up-With-Big-Data&quot;&gt;5. 빅데이터로 규모를 늘리자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#06-Grow-Connect-Learn&quot;&gt;6. 성장하고, 만나고, 배우자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#07-Immerse-Yourself&quot;&gt;7. 스스로 완벽하게 몰입하자&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#08-Engage-with-the-community&quot;&gt;8. 커뮤니티에 참여하자&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;01-Math-Stat-ML&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-1&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Get Good At Stats, Maths and Machine Learning 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/01-Math_Stat_ML.png&quot; alt=&quot;수학, 통계, 기계학습을 공부하자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
  위의 슬라이드에서는 수학, 통계, 기계학습을 온라인으로 공부할 수 있는 곳을 소개합니다. &lt;a href=&quot;https://ko.khanacademy.org/&quot;&gt;칸 아카데미(Khan Academy)&lt;/a&gt;, &lt;a href=&quot;https://ocw.mit.edu/index.htm&quot;&gt;MIT OpenCourseWare (MIT OCW)&lt;/a&gt;, &lt;a href=&quot;https://www.openintro.org/stat/&quot;&gt;OpenIntro Statistics&lt;/a&gt;, &lt;a href=&quot;https://www.udacity.com/&quot;&gt;Udacity&lt;/a&gt;, &lt;a href=&quot;https://www.datacamp.com/&quot;&gt;DataCamp&lt;/a&gt;, &lt;a href=&quot;http://online.stanford.edu/&quot;&gt;Stanford Online&lt;/a&gt;, &lt;a href=&quot;https://www.coursera.org/&quot;&gt;Coursera&lt;/a&gt; 등이 있습니다. 비슷한 국내 무료 강의는 KAIST의 &lt;a href=&quot;http://kooc.kaist.ac.kr/&quot;&gt;KOOC&lt;/a&gt;, 서울대의 &lt;a href=&quot;http://snuon.snu.ac.kr/&quot;&gt;SNUON&lt;/a&gt; 등이 있습니다. 여러 가지 그래프를 직접 보면서 통계 이론을 배울 수 있는 &lt;a href=&quot;http://students.brown.edu/seeing-theory/&quot;&gt;이곳&lt;/a&gt;도 추천합니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;02-Learn-to-code&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-2&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Learn To Code 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/02-Learn_to_code.png&quot; alt=&quot;코딩을 배우자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;a href=&quot;https://www.datacamp.com/&quot;&gt;DataCamp&lt;/a&gt;에 올라온 포스팅이라서 그런지 이 슬라이드에서는 &lt;a href=&quot;https://www.datacamp.com/&quot;&gt;DataCamp&lt;/a&gt;만 소개하고 있습니다. 하지만, &lt;a href=&quot;http://www.learnpython.org/&quot;&gt;learnpython.org&lt;/a&gt;에 가면, 브라우저에서 직접 코드를 입력하고 바로 확인하는 식으로 배울 수 있습니다. &lt;a href=&quot;https://wikidocs.net/&quot;&gt;WikiDocs&lt;/a&gt;에 있는 &lt;a href=&quot;https://wikidocs.net/book/2&quot;&gt;왕초보를 위한 Python 2.7&lt;/a&gt;, &lt;a href=&quot;https://wikidocs.net/book/1&quot;&gt;점프 투 파이썬&lt;/a&gt; 한글 자료로 배우는 것도 좋습니다. 어느정도 익숙하다면 &lt;a href=&quot;https://github.com/wesm/pydata-book&quot;&gt;PyData Book&lt;/a&gt;이나 &lt;a href=&quot;http://python-guide-kr.readthedocs.io/ko/latest/writing/style.html&quot;&gt;The Hitchhiker's Guide to Python&lt;/a&gt;을 추천합니다.    
  &lt;/p&gt;
  &lt;p&gt;
    R도 &lt;a href=&quot;http://tryr.codeschool.com/&quot;&gt;Code School - Try R&lt;/a&gt;에 가면 브라우저에서 직접 코드를 입력하고 바로 확인하는 식으로 배울 수 있습니다. 기본 문법을 익히고 R로 작업하는 것이 어느정도 익숙하다면 Hadley Wickham의 &lt;a href=&quot;http://r4ds.had.co.nz/&quot;&gt;R for Data Science&lt;/a&gt;도 추천합니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;03-Understand-DB&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-3&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Understand Databases 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/03-Understand_DB.png&quot; alt=&quot;데이터베이스를 이해하자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
  데이터가 어떤 형태로 어떻게 저장되는지 그리고 저장된 것을 어떻게 불러오는지 이해하는 것은 중요합니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;04-Explore-Data-Science-Workflow&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-4&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Explore The Data Science Workflow 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/04-Explore_Data_Science_Workflow.png&quot; alt=&quot;데이터 과학 업무 순서를 경험하자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
  아무리 강조해도 지나치지 않을 정도로 정말 중요한 순서를 담고 있는 슬라이드입니다. 데이터 과학자는 이런 순서로 일을 합니다. 이 중에서도 탐험적 데이터 분석(Exploratory Data Anaalysis)에 해당하는 부분이 가장 중요한데, 이 글의 목적이 짧고 간결하게 각 과정을 다루는 것이니 여기에서는 자세히 다루지 않고 이 부분만 따로 떼어 하나의 글로 다루겠습니다. 
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;05-Level-Up-With-Big-Data&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-5&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Level Up With Big Data 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/05-Level_up_with_Big_data.png&quot; alt=&quot;빅데이터로 규모를 늘리자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;06-Grow-Connect-Learn&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-6&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Grow, Connect, and Learn 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/06-Grow_Meet_Learn.png&quot; alt=&quot;성장하고, 만나고, 배우자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
  비즈니스 환경은 급속도로 변하고 있고, 최신 이론, 분석 패키지나 라이브러리 등은 끊임없이 쏟아져 나오고 있습니다. 이러한 시대의 흐름에 뒤처지지 않기 위해 끊임없이 전문가들을 만나고 교류하며 배워야합니다. 이런 이유에서 특별히 데이터 과학자는 무엇이든 열린 마음으로 빠르게 잘 배울 수 있어야 합니다. 가장 빠르게 잘 배울 수 있고, 몸에 녹아들어가는 경험을 쌓을 수 있는 방법은 실제 연구나 프로젝트를 수행하는 것입니다. 지속적으로 데이터를 다루면서 자라가야합니다. 그렇지 않으면 무뎌지는 것은 한순간입니다. 당시에는 놀라운 결과였을지라도 한물 간 따분한 것으로 치부되는 것도 순식간에 벌어집니다. 어리고 뛰어난 사람들이 항상 치고 올라올 때 폼을 유지하더라도 능력의 격차를 줄어드는 것을 막기란 쉽지 않을텐데 경력 단절로 동향을 따라가지 못한다면 어떻겠습니까?
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;07-Immerse-Yourself&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-7&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Immerse Yourself Completely 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/07-Immerse_Yourself.png&quot; alt=&quot;스스로 완벽하게 몰입하자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
  &lt;p&gt;
  스스로 완벽하게 미친듯이 몰입하여 더욱 나아가는 것이 중요합니다.
  &lt;/p&gt;
&lt;/section&gt;

&lt;section id=&quot;08-Engage-with-the-community&quot;&gt;
  &lt;p&gt;
    &lt;figure&gt;
      &lt;label for=&quot;mn-figure-8&quot; class=&quot;margin-toggle&quot;&gt;&amp;#8853;&lt;/label&gt;
      &lt;input type=&quot;checkbox&quot; id=&quot;mn-exports-imports&quot; class=&quot;margin-toggle&quot;/&gt;
      &lt;span class=&quot;marginnote&quot;&gt;원문에서는 Engage With The Community 입니다.&lt;/span&gt;
      &lt;img src=&quot;/images/2017-04-16/08-Engage_with_the_community.png&quot; alt=&quot;커뮤니티에 참여하자&quot; /&gt;
    &lt;/figure&gt;
  &lt;/p&gt;
&lt;/section&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;/js/footnotes.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/highlight.pack.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;!-- http://tsi.github.io/inlineDisqussions/ --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/inlineDisqussions.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;
disqus_shortname = 'danielykim';

jQuery(document).ready(function() {
  jQuery(&quot;p&quot;).inlineDisqussions();
});

jQuery(&quot;p&quot;).inlineDisqussions({
  identifier: 'disqussion',
  displayCount: true,
  highlighted: true,
  position: 'right',
  background: '#FFFFF9',
  maxWidth: 250
});
&lt;/script&gt;
</description>
        <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/04/16/Become-A-Data-Scientist/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/04/16/Become-A-Data-Scientist/</guid>
        
        
      </item>
    
      <item>
        <title>DQN-tensorflow on Windows 7 and 10</title>
        <description>&lt;p&gt;이 글의 목적은 고전 게임을 심층강화학습하는 코드인 &lt;a href=&quot;https://github.com/devsisters/DQN-tensorflow&quot;&gt;DQN-tensorflow&lt;/a&gt;를 Windows 7이나 10에서 실행하는 방법을 소개하는 것입니다. 혹시 코드와 관련된 이론적인 배경이 궁금하시다면 &lt;a href=&quot;http://home.uchicago.edu/~arij/journalclub/papers/2015_Mnih_et_al.pdf&quot;&gt;논문&lt;/a&gt;을 직접 읽어보시거나 &lt;a href=&quot;http://sanghyukchun.github.io/90/&quot;&gt;천상혁님의 논문 리뷰&lt;/a&gt;를 참조하시길 바랍니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/devsisters/DQN-tensorflow&quot;&gt;DQN-tensorflow&lt;/a&gt; 라는 제목에서 알 수 있듯이, 코드 내부에서 Python 라이브러리인 tensorflow 를 사용합니다. &lt;a href=&quot;https://github.com/devsisters/DQN-tensorflow&quot;&gt;DQN-tensorflow&lt;/a&gt; 여기에서 구할 수 있는 코드는 Linux 환경에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/devsisters/DQN-tensorflow.git&lt;/code&gt; 하고나서 Python 2.7.x 환경에서 repository에서 나와있는대로 실행하면 잘 돌아갑니다.&lt;/p&gt;

&lt;p&gt;하지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows 7&lt;/code&gt;이나 &lt;code class=&quot;highlighter-rouge&quot;&gt;10&lt;/code&gt;에서 위의 코드를 바로 돌리려고 하면 두 가지 종류의 오류 때문에 실행되지 않습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Windows 파일 경로 길이 제한&lt;/li&gt;
  &lt;li&gt;Python 2와 3 호환성&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;windows-7----&quot;&gt;Windows 7 파일 경로 길이 제한&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;로컬로 가져올 때:&lt;/strong&gt; 하지만, repository에 있는 checkpoints 안에 있는 하위 폴더 경로가 길어서 Windows 10에서는 경로명 제한을 해제한 후에 &lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt; 해야하고 Windows 7에서는 압축파일을 받아서 적당한 곳에 직접 풀어서 진행해야합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;실행할 때:&lt;/strong&gt; Windows 7에서는 경로 길이 제한 때문에 checkpoints 안에 매개변수값과 관련된 폴더를 만들다가 오류가 생깁니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;dqn/base.py&lt;/code&gt;에서 600-63 번째 줄에 있는 코드를 주석처리하면 이러한 오류는 발생하지 않습니다. 저는 60-63번째 줄을 주석처리하고 64번째 줄의 &lt;code class=&quot;highlighter-rouge&quot;&gt;return model_dir + '/'&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;return model_dir + '20170408/'&lt;/code&gt;로 바꿨습니다. &lt;a href=&quot;https://github.com/devsisters/DQN-tensorflow&quot;&gt;DQN-tensorflow&lt;/a&gt;의 코드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;config.py&lt;/code&gt;에 있는 매개변수별로 폴더를 만들지만 이 글에서는 매개변수들을 바꾸지 않고 실행해보는 것 자체에 관심이 있기 때문에 경로를 위와 같이 하였습니다.&lt;/p&gt;

&lt;h2 id=&quot;python-2--python-3&quot;&gt;Python 2 → Python 3&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/devsisters/DQN-tensorflow&quot;&gt;DQN-tensorflow&lt;/a&gt; 여기 있는 코드가 Python 3.x 에서 돌아가지 않으니 다음과 같이 바꿉니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;environment.py&lt;/code&gt; 와 &lt;code class=&quot;highlighter-rouge&quot;&gt;agent.py&lt;/code&gt;에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;xrange&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;range&lt;/code&gt;로 바꿉니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;agent.py&lt;/code&gt;에서 201과 248번째 줄의 &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt; 를 사용하기 위해 2번째 줄에 &lt;code class=&quot;highlighter-rouge&quot;&gt;import functools&lt;/code&gt;을 추가하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt;를 사용하는 부분을 &lt;code class=&quot;highlighter-rouge&quot;&gt;functools.reduce&lt;/code&gt;로 바꿉니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;agent.py&lt;/code&gt;에서 328번째 줄의 &lt;code class=&quot;highlighter-rouge&quot;&gt;self._saver = tf.train.Saver(self.w.values() + [self.step_op], max_to_keep=30)&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;self._saver = tf.train.Saver([v for k, v in self.w.items()] + [self.step_op], max_to_keep=30)&lt;/code&gt;로 바꿉니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section&quot;&gt;실행&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python main.py --is_train=True --use_gpu=True --display=False&lt;/code&gt;를 실행하면 다음과 같이 훈련을 시작합니다. 기본값은 벽돌깨기 게임(&lt;code class=&quot;highlighter-rouge&quot;&gt;Breakout-v0&lt;/code&gt;)입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;--env_name=Breakout-v0&lt;/code&gt;을 옵션으로 주지 않은 것에 주목하시길 바랍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-04-08/Python3.5.2-amd64_tensorflow-gpu1.1.0rc_NVIDIA_960M_Windows10-part1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;NVIDIA 960M을 가지고 훈련/학습을 시작합니다. 중간에 보이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.&lt;/code&gt;라는 메시지는 tensorflow-gpu 소스 코드를 받아서 직접 컴파일하면 나타나지 않습니다. 소스 코드를 받아서 적절한 옵션으로 컴파일하면 CPU가 지원하는 vectorization을 이용할 수 있습니다. Linux에서는 테스트해보았으나 Windows에서는 아직 해보지 않았습니다. 자세한 내용은 &lt;a href=&quot;https://www.tensorflow.org/install/install_sources&quot;&gt;Installing TensorFlow from Sources&lt;/a&gt;를 참조하시길 바랍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-04-08/Python3.5.2-amd64_tensorflow-gpu1.1.0rc_NVIDIA_960M_Windows10-part2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 사진은 학습이 진행되는 과정입니다. 중간에 checkpoints 가 저장됩니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;config.py&lt;/code&gt;에서 저장하는 빈도를 조절할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;이 글에서 사용한 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Windows 7&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;10&lt;/code&gt; 환경 각각에서 테스트 했습니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Python 3.5.2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tensorflow-gpu 1.1.0rc&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;NVIDIA 960M + CUDA 8.0.44 + cuDNN v5.1&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MSYS2&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;CMAKE&lt;/code&gt;로 미리 컴파일한 &lt;code class=&quot;highlighter-rouge&quot;&gt;atari-py&lt;/code&gt; 자세한 내용은 &lt;a href=&quot;http://ishuca.tistory.com/390&quot;&gt;“이슈카”님의 글&lt;/a&gt;을 참조하시길 바랍니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pip install gym[atari]==0.7.0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/&quot;&gt;여기&lt;/a&gt;에서 받을 수 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;PyOpenGL_accelerate‑3.1.1‑cp35‑cp35m‑win_amd64.whl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;텐서플로우 0.10 + 우분투 16.04 + CUDA 8.0 + 파이썬 3.5 설치&lt;/code&gt; 관련 내용은 &lt;a href=&quot;http://pythonkim.tistory.com/71&quot;&gt;“파이썬-킴”님의 글&lt;/a&gt;을 참조하시길 바랍니다.&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;기타 사항&lt;/h2&gt;
&lt;p&gt;이 글에서 언급한 변경 사항들은 &lt;a href=&quot;https://github.com/devsisters/DQN-tensorflow&quot;&gt;DQN-tensorflow&lt;/a&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;fork&lt;/code&gt;하여 &lt;a href=&quot;https://github.com/danielykim/DQN-tensorflow&quot;&gt;여기&lt;/a&gt;에 올려두었습니다.&lt;/p&gt;

</description>
        <pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/articles/2017/04/08/DQN-tensorflow-on-Windows/</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2017/04/08/DQN-tensorflow-on-Windows/</guid>
        
        
      </item>
    
  </channel>
</rss>
